{"version":3,"file":"static/js/76.5b4c2824.chunk.js","mappings":"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","sources":["components/NavLinkBtn/NavLinkBtn.styled.jsx","components/NavLinkBtn/NavLinkBtn.jsx","assets/data/SelectGenresOptionData.js","helpers/FormValidationSchemas.js","components/Forms/SelectInput/SelectInput.styled.jsx","components/Forms/SelectInput/SelectInput.jsx","components/Forms/GeneralInput/GeneralInput.styled.jsx","components/Forms/GeneralInput/GeneralInput.jsx","components/Forms/TextareaInput/TextareaInput.styled.jsx","components/Forms/TextareaInput/TextareaInput.jsx","components/Forms/FileInput/FileInput.styled.jsx","components/Forms/FileInput/FileInput.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Forms/PlatformOptions/PlatformOptions.styled.jsx","components/Forms/PlatformOptions/PlatformOptions.jsx","components/Forms/StreamerForm/StreamerForm.styled.jsx","components/Forms/StreamerForm/StreamerForm.jsx","assets/data/FilterSelectOptionsData.js","components/FilterMenu/FilterMenu.styled.jsx","components/FilterMenu/FilterMenu.jsx","components/StreamersList/StreamersCard/StreamersCard.Styled.jsx","components/StreamersList/StreamersCard/StreamersCard.jsx","components/StreamersList/StreamersList.styled.jsx","components/StreamersList/StreamersList.jsx","components/Controllers/Controllers.styled.jsx","components/Controllers/Controllers.jsx","pages/StreamersPage/StreamersPage.styled.jsx","pages/StreamersPage/StreamersPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0 auto;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 1em;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './NavLinkBtn.styled';\n\nexport const NavLinkBtn = ({ direction, text }) => {\n  return <StyledLink to={direction}>{text}</StyledLink>;\n};\n\nNavLinkBtn.propTypes = {\n  direction: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","export const genreOptions = [\n  {\n    value: 'alternative',\n    label: 'Alternative',\n  },\n  {\n    value: 'challenge',\n    label: 'Challenge',\n  },\n  {\n    value: 'comedy',\n    label: 'Comedy',\n  },\n  {\n    value: 'creative',\n    label: 'Creative',\n  },\n  {\n    value: 'educational',\n    label: 'Educational',\n  },\n  {\n    value: 'games',\n    label: 'Games',\n  },\n  {\n    value: 'interview',\n    label: 'Interview',\n  },\n  {\n    value: 'irl',\n    label: 'IRL',\n  },\n  {\n    value: 'movies',\n    label: 'Movies',\n  },\n  {\n    value: 'reactions',\n    label: 'Reactions',\n  },\n  {\n    value: 'tutorials',\n    label: 'Tutorials',\n  },\n  {\n    value: 'webcasts',\n    label: 'Webcasts',\n  },\n];\n","import { object, string, mixed } from 'yup';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nconst allowedGenres = genreOptions.map(genre => genre.value);\nconst allowedPlatforms = platformOptionsData.map(platformObj =>\n  platformObj.platform.toLowerCase()\n);\n\nexport const StreamerRegisterSchema = object().shape({\n  name: string().required('Streamer name is required'),\n  genre: string().oneOf(allowedGenres, 'Invalide option'),\n  platform: string().oneOf(allowedPlatforms, 'Invalide option'),\n  description: string()\n    .max(1000, 'Description should not exceed 1000 characters')\n    .required('Description is required'),\n  photo: mixed(),\n});\n","export const LightThemeSelectStyles = {\n  control: (base, { data, isDisabled, isFocused, isSelected }) => ({\n    ...base,\n    marginTop: 8,\n    background: `#FFFFFF`,\n    color: `#000000`,\n    outline: isFocused ? `1px solid #E91E63` : `1px solid #000000`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#FFFFFF`,\n    color: isFocused ? `#FFFFFF` : `#000000`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#000000`,\n  }),\n};\n\nexport const DarkThemeSelectStyles = {\n  control: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    marginTop: 8,\n    background: `#303030`,\n    color: `#FFFFFF`,\n    outline: `1px solid #FFFFFF`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#303030`,\n    color: `#FFFFFF`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#FFFFFF`,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/selectors';\n\nimport Select from 'react-select';\n\nimport {\n  LightThemeSelectStyles,\n  DarkThemeSelectStyles,\n} from './SelectInput.styled';\n\nexport const SelectInput = ({ name, options, setUserChoice, defaultValue }) => {\n  useEffect(() => {\n    if (defaultValue) {\n      setUserChoice(prevState => ({\n        ...prevState,\n        [`${name}`]: defaultValue.value,\n      }));\n    }\n  }, [name, defaultValue, setUserChoice]);\n\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const selectCustomStyles = currentTheme =>\n    currentTheme ? LightThemeSelectStyles : DarkThemeSelectStyles;\n\n  return (\n    <>\n      <Select\n        name={name}\n        options={options}\n        styles={selectCustomStyles(currentTheme)}\n        onChange={choice =>\n          setUserChoice(prevState => ({\n            ...prevState,\n            [`${name}`]: choice.value,\n          }))\n        }\n        defaultValue={defaultValue}\n      />\n    </>\n  );\n};\n\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setUserChoice: PropTypes.func.isRequired,\n  defaultValue: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledInput,\n  ValidationThumb,\n  StyledValidation,\n} from './GeneralInput.styled';\n\nexport const GeneralInput = ({ type, name, placeholder, formik, submited }) => {\n  return (\n    <ValidationThumb>\n      <StyledInput\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={formik.handleChange}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nGeneralInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledTextarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  resize: none;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  &::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: ${({ theme }) => theme.commonColors.linksBg};\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.commonColors.linksBg};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 275px;\n    font-size: 18px;\n  }\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledTextarea,\n  ValidationThumb,\n  StyledValidation,\n} from './TextareaInput.styled';\n\nexport const TextareaInput = ({\n  name,\n  rows,\n  placeholder,\n  formik,\n  submited,\n}) => {\n  return (\n    <ValidationThumb>\n      <StyledTextarea\n        name={name}\n        rows={rows}\n        placeholder={placeholder}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        onChange={formik.handleChange}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nTextareaInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  rows: PropTypes.number.isRequired,\n  placeholder: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  height: 110px;\n  margin-top: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  background-color: ${({ theme }) => theme.bgColors.fileInputBg};\n  cursor: pointer;\n\n  font-family: 'MontserratMedium';\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.bgColors.fileInputHoverBg};\n  }\n\n  ::file-selector-button {\n    background-color: transparent;\n    border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n    border-radius: 37.5px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n      color: ${({ theme }) => theme.commonColors.contrastText};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledLabel,\n  StyledInput,\n  ValidationThumb,\n  StyledValidation,\n} from './FileInput.styled';\n\nexport const FileInput = ({ name, formik, submited, isFile, setIsFile }) => {\n  const handleFile = e => {\n    setIsFile(e.target.files[0]);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsFile(e.dataTransfer.files[0]);\n  };\n\n  const handleDefault = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <ValidationThumb>\n      <StyledLabel\n        onDragStart={e => handleDefault(e)}\n        onDragLeave={e => handleDefault(e)}\n        onDragOver={e => handleDefault(e)}\n        onDrop={e => handleDrop(e)}\n      >\n        {isFile\n          ? `Photo ${isFile.name} is chosen`\n          : 'Click here to add streamer photo'}\n\n        <StyledInput\n          type=\"file\"\n          name={name}\n          value={formik.values[`${name}`]}\n          submited={submited}\n          error={formik.errors[`${name}`]}\n          onChange={handleFile}\n        />\n      </StyledLabel>\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nFileInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n  isFile: PropTypes.object,\n  setIsFile: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  position: relative;\n\n  display: inline-block;\n  padding: 8px 20px;\n  margin: 20px auto 0;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledBtn } from './Button.styled';\n\nexport const Button = ({ type, text, onClick }) => {\n  return (\n    <StyledBtn type={type} onClick={onClick}>\n      {text}\n    </StyledBtn>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  column-gap: 5px;\n  row-gap: 5px;\n  grid-template-columns: 1fr 9fr;\n  grid-template-rows: 1fr 3fr;\n\n  width: 100%;\n  height: 100px;\n  padding: 5px 0;\n\n  @media screen and (min-width: 768px) {\n    height: 120px;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 22px;\n  height: 22px;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n  justify-self: end;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 42px;\n    height: 42px;\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 2 / 3;\n  align-self: center;\n  justify-self: start;\n\n  font-family: 'MontserratBold';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  grid-row: 2 / 3;\n  grid-column: 1 / 3;\n\n  font-family: 'MontserratRegular';\n  font-size: 14px;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nimport {\n  Container,\n  StyledLabel,\n  StyledLogo,\n  StyledText,\n} from './PlatformOptions.styled';\n\nconst OptionLabel = ({ platformName, imgURL, description }) => {\n  return (\n    <Container>\n      <StyledLogo src={imgURL} alt={`${platformName} logo`} />\n      <StyledLabel>{platformName}</StyledLabel>\n      <StyledText>{description}</StyledText>\n    </Container>\n  );\n};\n\nexport const platformOptions = platformOptionsData.map(\n  ({ platform, imgURL, description }) => {\n    return {\n      value: platform.toLowerCase(),\n      label: (\n        <OptionLabel\n          platformName={platform}\n          imgURL={imgURL}\n          description={description}\n        />\n      ),\n    };\n  }\n);\n\nOptionLabel.propTypes = {\n  platformName: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  border-radius: 8px;\n  background-color: #f18585;\n\n  font-family: 'MontserratRegular';\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    width: 550px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 900px;\n  }\n`;\n\nexport const FormBg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  background-image: ${({ theme }) => theme.bgImages.streamerFormBg};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  filter: blur(4px);\n  -webkit-filter: blur(4px);\n`;\n\nexport const StyledForm = styled.form`\n  position: relative;\n  z-index: 10;\n\n  > button {\n    left: 50%;\n    transform: translateX(-50%);\n\n    @media screen and (min-width: 1200px) {\n      left: 90%;\n    }\n  }\n`;\n\nexport const StyledFormTitle = styled.h3`\n  margin-bottom: 10px;\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StyledFormLayoutThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr;\n    column-gap: 40px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { StreamerRegisterSchema } from 'helpers/FormValidationSchemas';\n\nimport { SelectInput } from '../SelectInput/SelectInput';\nimport { GeneralInput } from '../GeneralInput/GeneralInput';\nimport { TextareaInput } from '../TextareaInput/TextareaInput';\nimport { FileInput } from '../FileInput/FileInput';\nimport { Button } from '../../Button/Button';\n\nimport { platformOptions } from '../PlatformOptions/PlatformOptions';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\n\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport {\n  Container,\n  FormBg,\n  StyledForm,\n  StyledFormTitle,\n  StyledFormLayoutThumb,\n  StyledLabel,\n} from './StreamerForm.styled';\n\nexport const StreamerForm = () => {\n  const [userChoice, setUserChoice] = useState({});\n  const [isFile, setIsFile] = useState(null);\n  const [isSubmited, setIsSubmited] = useState('false');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      genre: '',\n      platform: '',\n      description: '',\n      photo: '',\n    },\n    validationSchema: StreamerRegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      const formData = new FormData();\n      formData.append('name', values.name);\n      formData.append('genre', userChoice.genre);\n      formData.append('platform', userChoice.platform);\n      formData.append('description', values.description);\n      formData.append('photo', isFile);\n\n      fetchAPI('post', '/api/streamers', formData);\n      resetForm();\n      setIsFile(null);\n      setIsSubmited('false');\n    },\n  });\n\n  const handleValidation = e => {\n    e.preventDefault();\n    setIsSubmited('true');\n    formik.handleSubmit();\n  };\n\n  return (\n    <Container>\n      <FormBg />\n      <StyledForm>\n        <StyledFormTitle>Join the community!</StyledFormTitle>\n        <StyledFormLayoutThumb>\n          <div>\n            <StyledLabel>\n              Streamer name\n              <GeneralInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <StyledLabel>\n              Choose your platform\n              <SelectInput\n                name=\"platform\"\n                options={platformOptions}\n                setUserChoice={setUserChoice}\n                defaultValue={platformOptions[0]}\n                value={formik.values['platform']}\n                error={formik.errors['platform']}\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <FileInput\n              name=\"photo\"\n              submited={isSubmited}\n              formik={formik}\n              isFile={isFile}\n              setIsFile={setIsFile}\n            />\n          </div>\n          <div>\n            <StyledLabel>\n              Streaming genre\n              <SelectInput\n                name=\"genre\"\n                options={genreOptions}\n                setUserChoice={setUserChoice}\n                defaultValue={genreOptions[0]}\n                value={formik.values['genre']}\n                error={formik.errors['genre']}\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <StyledLabel>\n              Add streamer activity description\n              <TextareaInput\n                name=\"description\"\n                rows={5}\n                placeholder=\"Enter streamer activity description\"\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n          </div>\n        </StyledFormLayoutThumb>\n        <Button type=\"submit\" text=\"Submit\" onClick={handleValidation} />\n      </StyledForm>\n    </Container>\n  );\n};\n","export const sortFilterOptions = [\n  {\n    value: 'newest',\n    label: 'Newest',\n  },\n  {\n    value: 'oldest',\n    label: 'Oldest',\n  },\n  {\n    value: 'upvote',\n    label: 'Upvotes',\n  },\n  {\n    value: 'downvote',\n    label: 'Downvotes',\n  },\n];\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 0 0;\n  padding: 20px;\n\n  background-color: ${({ theme }) => theme.bgColors.filterMenuBg};\n  border-radius: 22px;\n\n  > button {\n    @media screen and (min-width: 768px) {\n      left: 90%;\n    }\n  }\n`;\n\nexport const FiltersTitle = styled.h3`\n  margin-bottom: 10px;\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 26px;\n  }\n`;\n\nexport const FiltersThumb = styled.div`\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    column-gap: 30px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n  margin-top: 10px;\n\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  sortFilterOptions,\n  genreOptions,\n  platformFilterOptions,\n} from 'assets/data/index';\n\nimport { SelectInput } from 'components/Forms/SelectInput/SelectInput';\nimport {\n  Container,\n  FiltersThumb,\n  StyledLabel,\n  FiltersTitle,\n} from './FilterMenu.styled';\n\nexport const FilterMenu = ({ setUserChoice }) => {\n  return (\n    <Container>\n      <FiltersTitle>Select yout filters</FiltersTitle>\n      <FiltersThumb>\n        <StyledLabel>\n          Platform\n          <SelectInput\n            name=\"platform\"\n            options={platformFilterOptions}\n            setUserChoice={setUserChoice}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Genre\n          <SelectInput\n            name=\"genre\"\n            options={genreOptions}\n            setUserChoice={setUserChoice}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Sort by\n          <SelectInput\n            name=\"sort\"\n            options={sortFilterOptions}\n            setUserChoice={setUserChoice}\n            defaultValue={sortFilterOptions[0]}\n          />\n        </StyledLabel>\n      </FiltersThumb>\n    </Container>\n  );\n};\n\nFilterMenu.propTypes = {\n  setUserChoice: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  width: 100%;\n  height: 280px;\n  padding: 10px;\n  border-radius: 8px;\n\n  font-size: 14px;\n\n  background-image: linear-gradient(\n    315deg,\n    rgba(233, 30, 99, 0.5) 0%,\n    rgba(48, 79, 254, 0.5) 100%\n  );\n\n  @media screen and (min-width: 480px) {\n    gap: 10px;\n    width: 450px;\n    padding: 15px 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 350px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 115px;\n  height: 45%;\n\n  border-radius: 8px;\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 50%;\n  border-bottom-left-radius: 45%;\n\n  border-right-width: 10px;\n  border-right-style: solid;\n  border-right-color: ${({ theme }) => theme.textColors.accentText};\n\n  border-bottom-width: 10px;\n  border-bottom-style: solid;\n  border-bottom-color: ${({ theme }) => theme.textColors.accentText};\n\n  overflow: hidden;\n\n  @media screen and (min-width: 480px) {\n    width: 150px;\n    height: 55%;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 110px;\n    height: 50%;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 130px;\n    height: 50%;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 150px;\n    height: 55%;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const InfoThumb = styled.div`\n  display: grid;\n  grid-template-rows: repeat(8, 1fr);\n  grid-template-columns: repeat(3, 1fr);\n  row-gap: 10px;\n  justify-items: center;\n  align-items: center;\n\n  width: 100%;\n  height: 85%;\n\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  & div:nth-child(2) {\n    grid-row: 3 / 4;\n    grid-column: 2 / 4;\n  }\n\n  & div:nth-child(3) {\n    grid-row: 4 / 5;\n    grid-column: 2 / 4;\n  }\n\n  & p:nth-child(4) {\n    grid-row: 5 / 6;\n    grid-column: 2 / 4;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  grid-row: 1 / 3;\n  grid-column: 2 / 4;\n\n  color: ${({ theme }) => theme.textColors.accentText};\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nexport const VoteThumb = styled.div`\n  display: grid;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 5px;\n  justify-items: center;\n\n  grid-row: 6 / 9;\n  grid-column: 1 / 4;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 10px;\n  }\n`;\n\nexport const UpvotesText = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n\n  color: ${({ theme }) => theme.commonColors.inputCorrectText};\n  font-size: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  > svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\nexport const DownvotesText = styled(UpvotesText)`\n  grid-column: 2 / 3;\n  color: ${({ theme }) => theme.commonColors.inputErrorText};\n\n  > svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const UpvoteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: end;\n\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n\n  min-width: 100px;\n  padding: 5px 20px;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.inputCorrectText};\n  border-radius: 37.5px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.inputCorrectText};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.commonColors.inputCorrectText};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 150px;\n    padding: 5px 15px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 5px 20px;\n  }\n\n  > svg {\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n\n    @media screen and (min-width: 768px) {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const DownvoteBtn = styled(UpvoteBtn)`\n  grid-column: 2 / 3;\n  border: 3px solid ${({ theme }) => theme.commonColors.inputErrorText};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.inputErrorText};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.commonColors.inputErrorText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport {\n  addUpvotedStreamers,\n  addDownvotedStreamers,\n  removeUpvotedStreamers,\n  removeDownvotedStreamers,\n} from 'redux/streamers/streamersSilce';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUpvotedStreamers,\n  selectDownvotedStreamers,\n} from 'redux/selectors';\n\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im';\nimport { FaRegThumbsUp, FaRegThumbsDown } from 'react-icons/fa';\n\nimport { StaredRating } from 'components/Badges/Rating/StarRating';\nimport { PlatformBadge } from 'components/Badges/PlatformBadge/PlatformBadge';\nimport { GenreBadge } from 'components/Badges/GenreBadge/GenreBadge';\nimport { NavLinkBtn } from 'components/NavLinkBtn/NavLinkBtn';\n\nimport {\n  Container,\n  ImageThumb,\n  StyledImg,\n  InfoThumb,\n  CardTitle,\n  UpvotesText,\n  DownvotesText,\n  VoteThumb,\n  UpvoteBtn,\n  DownvoteBtn,\n} from './StreamersCard.Styled';\n\nexport const StreamersCard = ({\n  streamer: { _id, name, photoURL, genre, platform, upvote, downvote, rating },\n}) => {\n  const [isUpvoted, setIsUpvoted] = useState(false);\n  const [isDownvoted, setIsDownvoted] = useState(false);\n  const upvotedStreamers = useSelector(selectUpvotedStreamers);\n  const downvotedStreamers = useSelector(selectDownvotedStreamers);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const upvotedState = upvotedStreamers.find(\n      streamerId => streamerId === _id\n    );\n    const downvotedState = downvotedStreamers.find(\n      streamerId => streamerId === _id\n    );\n\n    upvotedState ? setIsUpvoted(true) : setIsUpvoted(false);\n    downvotedState ? setIsDownvoted(true) : setIsDownvoted(false);\n  }, [upvotedStreamers, downvotedStreamers, _id]);\n\n  const handleUpvote = () => {\n    if (isDownvoted) {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, {\n        downvote: downvote - 1,\n      });\n      dispatch(removeDownvotedStreamers(_id));\n    } else {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, { upvote: upvote + 1 });\n      dispatch(addUpvotedStreamers(_id));\n    }\n  };\n\n  const handleDownvote = () => {\n    if (isUpvoted) {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, { upvote: upvote - 1 });\n      dispatch(removeUpvotedStreamers(_id));\n    } else {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, {\n        downvote: downvote + 1,\n      });\n      dispatch(addDownvotedStreamers(_id));\n    }\n  };\n\n  return (\n    <Container>\n      <ImageThumb>\n        <StyledImg src={photoURL} alt={name} width=\"150px\" height=\"250px\" />\n      </ImageThumb>\n      <InfoThumb>\n        <CardTitle>{name}</CardTitle>\n        <StaredRating\n          rating={rating}\n          style={{ maxWidth: 90, justifySelf: 'end', marginRight: 15 }}\n        />\n        <PlatformBadge platform={platform} height={20} />\n        <GenreBadge genre={genre} />\n        <VoteThumb>\n          <UpvotesText>\n            <ImArrowUp /> {upvote}\n          </UpvotesText>\n          <DownvotesText>\n            <ImArrowDown />\n            {downvote}\n          </DownvotesText>\n          <UpvoteBtn onClick={handleUpvote} disabled={isUpvoted}>\n            <FaRegThumbsUp /> {isUpvoted ? 'Upvoted' : 'Upvote'}\n          </UpvoteBtn>\n          <DownvoteBtn onClick={handleDownvote} disabled={isDownvoted}>\n            <FaRegThumbsDown />\n            {isDownvoted ? 'Downvoted' : 'Downvote'}\n          </DownvoteBtn>\n        </VoteThumb>\n      </InfoThumb>\n      <NavLinkBtn direction={`/streamers/${_id}`} text=\"View Details\" />\n    </Container>\n  );\n};\n\nStreamersCard.propTypes = {\n  streamer: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    photoURL: PropTypes.string,\n    genre: PropTypes.string.isRequired,\n    platform: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    upvote: PropTypes.number.isRequired,\n    downvote: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n\n  margin: 20px 0;\n\n  @media screen and (min-width: 1200px) {\n    gap: 30px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StreamersCard } from './StreamersCard/StreamersCard';\nimport { StyledList } from './StreamersList.styled';\n\nexport const StreamersList = ({ streamers }) => {\n  return (\n    <StyledList>\n      {streamers.map(streamer => {\n        return <StreamersCard key={streamer._id} streamer={streamer} />;\n      })}\n    </StyledList>\n  );\n};\n\nStreamersList.propTypes = {\n  streamers: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  justify-content: center;\n`;\n\nexport const StyledBtn = styled.button`\n  display: inline-block;\n  padding: 8px 15px;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 1em;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.commonColors.socialsBg};\n    border: 3px solid ${({ theme }) => theme.commonColors.socialsBg};\n    color: ${({ theme }) => theme.commonColors.disabledBtnText};\n  }\n\n  > svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { ImArrowLeft, ImArrowRight } from 'react-icons/im';\nimport { Container, StyledBtn } from './Controllers.styled';\n\nexport const Controllers = ({ page, maxPages, setPage }) => {\n  const [isBackwardsDisabled, setIsBackwardsDisabled] = useState(true);\n  const [isForwardsDisabled, setIsForwardsDisabled] = useState(false);\n\n  useEffect(() => {\n    if (page === 1) {\n      setIsBackwardsDisabled(true);\n      setIsForwardsDisabled(false);\n    } else if (page === maxPages) {\n      setIsBackwardsDisabled(false);\n      setIsForwardsDisabled(true);\n    } else {\n      setIsBackwardsDisabled(false);\n      setIsForwardsDisabled(false);\n    }\n  }, [page, maxPages]);\n\n  const handleNextPage = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handlePreviousPage = () => {\n    setPage(prevState => prevState - 1);\n  };\n\n  return (\n    <Container>\n      <StyledBtn\n        type=\"button\"\n        aria-label=\"backwards\"\n        onClick={handlePreviousPage}\n        disabled={isBackwardsDisabled}\n      >\n        <ImArrowLeft />\n      </StyledBtn>\n      <StyledBtn\n        type=\"button\"\n        aria-label=\"forwards\"\n        onClick={handleNextPage}\n        disabled={isForwardsDisabled}\n      >\n        <ImArrowRight />\n      </StyledBtn>\n    </Container>\n  );\n};\n\nControllers.propTypes = {\n  page: PropTypes.number.isRequired,\n  maxPages: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport * as streamersBg from 'assets/images/main/streamers_bg-min.png';\nimport * as streamersBigBg from 'assets/images/main/streamers_bg@2x-min.png';\n\nexport const HeroSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: center;\n\n  height: 120px;\n  padding: 0 40px;\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    height: 140px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 180px;\n  }\n`;\n\nexport const HeroSubtitle = styled.p`\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const HeroTitle = styled.h1`\n  font-family: 'MontserratBold';\n  font-size: 22px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 42px;\n  }\n`;\n\nexport const FormSection = styled.section`\n  padding: 40px;\n`;\n\nexport const FormSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const StreamersSection = styled.section`\n  width: 100%;\n  min-height: 800px;\n  padding: 20px 40px;\n\n  background-image: url(${streamersBg.default});\n  background-repeat: no-repeat;\n  background-size: 150% 700px;\n  background-position: top 100px left 0;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${streamersBigBg.default});\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 40px;\n  }\n`;\n\nexport const StreamersSectionTitle = styled.h2`\n  font-family: 'MontserratBold';\n  font-size: 34px;\n`;\n\nexport const TitleAccent = styled.span`\n  display: block;\n  color: ${({ theme }) => theme.textColors.accentText};\n`;\n","import { useState, useEffect } from 'react';\nimport { getStreamersAPI } from 'helpers/backendAPI';\n\nimport { HeroBg } from 'components/Decoration/HeroBg/HeroBg';\nimport * as heroBg from 'assets/images/main/hero-min.jpg';\nimport * as bigHeroBg from 'assets/images/main/hero@2x-min.jpg';\n\nimport { StreamerForm } from 'components/Forms/StreamerForm/StreamerForm';\nimport { FilterMenu } from 'components/FilterMenu/FilterMenu';\nimport { StreamersList } from 'components/StreamersList/StreamersList';\nimport { Controllers } from 'components/Controllers/Controllers';\nimport {\n  HeroSection,\n  HeroSubtitle,\n  HeroTitle,\n  FormSection,\n  FormSectionTitle,\n  StreamersSection,\n  StreamersSectionTitle,\n  TitleAccent,\n} from './StreamersPage.styled';\n\nconst StreamersPage = () => {\n  const [streamers, setStreamers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [maxPages, setMaxPages] = useState(0);\n  const [userChoice, setUserChoice] = useState({});\n  const limit = 6;\n\n  useEffect(() => {\n    const getStreamers = async () => {\n      const params = { page, limit, ...userChoice };\n\n      try {\n        const response = await getStreamersAPI(params);\n        setStreamers(response.results);\n        const maxResultPages = Math.ceil(response.totalCount / limit);\n        setMaxPages(maxResultPages);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const timerId = setInterval(() => {\n      getStreamers();\n    }, 2000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [page, limit, userChoice]);\n\n  return (\n    <>\n      <HeroBg image={heroBg.default} bigimage={bigHeroBg.default} />\n      <HeroSection>\n        <HeroSubtitle>Welcome to the Dare Drop Streaming Service</HeroSubtitle>\n        <HeroTitle>Find the best streamer to your liking!</HeroTitle>\n      </HeroSection>\n      <FormSection>\n        <FormSectionTitle>Join the platform</FormSectionTitle>\n        <StreamerForm />\n      </FormSection>\n      <StreamersSection>\n        <StreamersSectionTitle>\n          Dare Drop <TitleAccent>Top Streamers</TitleAccent>\n        </StreamersSectionTitle>\n        <FilterMenu setUserChoice={setUserChoice} />\n        <StreamersList streamers={streamers} />\n        {maxPages > 1 && (\n          <Controllers page={page} maxPages={maxPages} setPage={setPage} />\n        )}\n      </StreamersSection>\n    </>\n  );\n};\n\nexport default StreamersPage;\n"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","_ref","theme","commonColors","accentElemBg","_ref2","textColors","mainText","_ref3","_ref4","contrastText","NavLinkBtn","direction","text","_jsx","to","children","genreOptions","value","label","allowedGenres","map","genre","allowedPlatforms","platformOptionsData","platformObj","platform","toLowerCase","StreamerRegisterSchema","object","shape","name","string","required","oneOf","description","max","photo","mixed","LightThemeSelectStyles","control","base","data","isDisabled","isFocused","isSelected","_objectSpread","marginTop","background","color","outline","option","styles","backgroundColor","singleValue","state","DarkThemeSelectStyles","SelectInput","options","setUserChoice","defaultValue","useEffect","prevState","_defineProperty","concat","currentTheme","useSelector","selectCurrentTheme","_Fragment","Select","selectCustomStyles","onChange","choice","validateColor","error","submited","inputErrorText","inputCorrectText","StyledInput","bgColors","mainBg","ValidationThumb","_templateObject2","StyledValidation","_templateObject3","_ref5","GeneralInput","type","placeholder","formik","_jsxs","handleChange","values","errors","touched","StyledTextarea","linksBg","_ref6","_ref7","_ref8","TextareaInput","rows","StyledLabel","fileInputBg","fileInputHoverBg","_templateObject4","FileInput","isFile","setIsFile","handleDefault","e","preventDefault","onDragStart","onDragLeave","onDragOver","onDrop","dataTransfer","files","handleDrop","target","StyledBtn","Button","onClick","Container","StyledLogo","StyledText","OptionLabel","platformName","imgURL","src","alt","platformOptions","FormBg","bgImages","streamerFormBg","StyledForm","StyledFormTitle","StyledFormLayoutThumb","_templateObject5","_templateObject6","StreamerForm","_useState","useState","_useState2","_slicedToArray","userChoice","_useState3","_useState4","_useState5","_useState6","isSubmited","setIsSubmited","useFormik","initialValues","validationSchema","onSubmit","resetForm","formData","FormData","append","fetchAPI","handleSubmit","sortFilterOptions","filterMenuBg","FiltersTitle","FiltersThumb","FilterMenu","platformFilterOptions","ImageThumb","accentText","StyledImg","InfoThumb","CardTitle","VoteThumb","UpvotesText","_templateObject7","DownvotesText","_templateObject8","UpvoteBtn","_templateObject9","_ref9","_ref10","_ref11","DownvoteBtn","_templateObject10","_ref12","_ref13","_ref14","StreamersCard","_ref$streamer","streamer","_id","photoURL","upvote","downvote","rating","isUpvoted","setIsUpvoted","isDownvoted","setIsDownvoted","upvotedStreamers","selectUpvotedStreamers","downvotedStreamers","selectDownvotedStreamers","dispatch","useDispatch","upvotedState","find","streamerId","downvotedState","width","height","StaredRating","style","maxWidth","justifySelf","marginRight","PlatformBadge","GenreBadge","ImArrowUp","ImArrowDown","removeDownvotedStreamers","addUpvotedStreamers","disabled","FaRegThumbsUp","removeUpvotedStreamers","addDownvotedStreamers","FaRegThumbsDown","StyledList","StreamersList","streamers","socialsBg","disabledBtnText","Controllers","page","maxPages","setPage","isBackwardsDisabled","setIsBackwardsDisabled","isForwardsDisabled","setIsForwardsDisabled","ImArrowLeft","ImArrowRight","HeroSection","HeroSubtitle","HeroTitle","FormSection","FormSectionTitle","StreamersSection","streamersBg","streamersBigBg","StreamersSectionTitle","TitleAccent","setStreamers","setMaxPages","_useState7","_useState8","getStreamers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","response","maxResultPages","wrap","_context","prev","next","limit","getStreamersAPI","sent","results","Math","ceil","totalCount","t0","console","stop","apply","arguments","timerId","setInterval","clearInterval","HeroBg","image","heroBg","bigimage","bigHeroBg"],"sourceRoot":""}