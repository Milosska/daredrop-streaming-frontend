{"version":3,"file":"static/js/708.96f59a3b.chunk.js","mappings":"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","sources":["components/StreamerRecord/StreamerRecord.styled.jsx","components/StreamerRecord/StreamerRecord.jsx","pages/StreamerRecordPage/StreamerRecordPage.styled.jsx","pages/StreamerRecordPage/StreamerRecordPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding: 40px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 10px;\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    text-align: left;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  margin-bottom: 10px;\n\n  color: ${({ theme }) => theme.textColors.accentText};\n  font-family: 'MontserratBold';\n  font-size: 24px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    font-size: 36px;\n    text-align: left;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 42px;\n  }\n`;\n\nexport const GeneralThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n  line-height: 1.32;\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    row-gap: 20px;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr 3fr;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StreamerInfoThumb = styled.div`\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n\n  display: grid;\n  row-gap: 10px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 2fr;\n    gap: 20px;\n  }\n\n  div:first-child {\n    grid-row: 1 /2;\n    grid-column: 1 / 3;\n    justify-self: center;\n\n    @media screen and (min-width: 768px) {\n      justify-self: left;\n    }\n  }\n`;\n\nexport const GenreThumb = styled.div`\n  display: flex;\n  max-height: 25px;\n  margin: 0 20px 0 auto;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    gap: 10px;\n    align-items: start;\n    max-height: auto;\n    margin: 0;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    gap: 10px;\n    align-items: start;\n    margin: 0;\n  }\n`;\n\nexport const PlatformThumb = styled(GenreThumb)`\n  margin: 0 auto 0 20px;\n`;\n\nexport const ParameterLable = styled.span`\n  display: none;\n  margin-right: 10px;\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-family: 'MontserratBold';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    display: inline-block;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: justify;\n`;\n\nexport const ImageThumb = styled.div`\n  position: relative;\n  grid-row: 1 / 3;\n  grid-column: 2 / 3;\n  justify-self: center;\n  align-self: center;\n\n  width: 320px;\n  height: 380px;\n  background-color: ${({ theme }) => theme.textColors.accentText};\n\n  border-radius: 35%;\n  border-style: solid;\n  border-width: 10px 20px;\n  border-color: ${({ theme }) => theme.textColors.accentText};\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    height: 420px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 450px;\n    height: 550px;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StaredRating } from 'components/Badges/Rating/StarRating';\nimport { GenreBadge } from 'components/Badges/GenreBadge/GenreBadge';\nimport { PlatformBadge } from '../Badges/PlatformBadge/PlatformBadge';\nimport {\n  StyledSection,\n  StyledSubtitle,\n  StyledTitle,\n  GeneralThumb,\n  StreamerInfoThumb,\n  GenreThumb,\n  PlatformThumb,\n  ParameterLable,\n  StyledDescription,\n  ImageThumb,\n  StyledImage,\n} from './StreamerRecord.styled';\n\nexport const StreamerRecord = ({\n  streamer: { _id, name, photoURL, genre, platform, description, rating },\n}) => {\n  return (\n    <>\n      {_id && (\n        <StyledSection>\n          <StyledSubtitle>Dare Drop Streamer</StyledSubtitle>\n          <StyledTitle>{name}</StyledTitle>\n          <GeneralThumb>\n            <StreamerInfoThumb>\n              <StaredRating\n                rating={rating}\n                style={{ maxWidth: 180, justifySelf: 'end', marginRight: 15 }}\n              />\n              <GenreThumb>\n                <ParameterLable>Genre:</ParameterLable>\n                <GenreBadge genre={genre} />\n              </GenreThumb>\n              <PlatformThumb>\n                <ParameterLable>Platform:</ParameterLable>\n                <PlatformBadge platform={platform} height={25} />\n              </PlatformThumb>\n            </StreamerInfoThumb>\n            <ImageThumb>\n              <StyledImage src={photoURL} alt={name} />\n            </ImageThumb>\n            <StyledDescription>\n              <ParameterLable>Activity description:</ParameterLable>\n              {description}\n            </StyledDescription>\n          </GeneralThumb>\n        </StyledSection>\n      )}\n    </>\n  );\n};\n\nStreamerRecord.propTypes = {\n  streamer: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n    photoURL: PropTypes.string,\n    genre: PropTypes.string,\n    platform: PropTypes.string,\n    description: PropTypes.string,\n    rating: PropTypes.number,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { HeroBg } from 'components/Decoration/HeroBg/HeroBg';\nimport { StreamerRecord } from 'components/StreamerRecord/StreamerRecord';\nimport { PageTitle } from './StreamerRecordPage.styled';\n\nconst StreamerRecordPage = () => {\n  const [streamer, setStreamer] = useState({});\n  const { streamerId } = useParams();\n\n  useEffect(() => {\n    const getStreamerInfo = async () => {\n      const response = await fetchAPI('get', `/api/streamers/${streamerId}`);\n      setStreamer(response);\n    };\n\n    getStreamerInfo();\n  }, [streamerId]);\n\n  return (\n    <>\n      <HeroBg image={streamer.photoURL} bigimage={streamer.photoURL} />\n      <PageTitle>Find out about your favorite streamer</PageTitle>\n      <StreamerRecord streamer={streamer} />\n    </>\n  );\n};\n\nexport default StreamerRecordPage;\n"],"names":["StyledSection","styled","_templateObject","_taggedTemplateLiteral","StyledSubtitle","_templateObject2","StyledTitle","_templateObject3","_ref","theme","textColors","accentText","GeneralThumb","_templateObject4","StreamerInfoThumb","_templateObject5","GenreThumb","_templateObject6","PlatformThumb","_templateObject7","ParameterLable","_templateObject8","_ref2","mainText","StyledDescription","_templateObject9","ImageThumb","_templateObject10","_ref3","_ref4","StyledImage","_templateObject11","StreamerRecord","_ref$streamer","streamer","_id","name","photoURL","genre","platform","description","rating","_jsx","_Fragment","children","_jsxs","StaredRating","style","maxWidth","justifySelf","marginRight","GenreBadge","PlatformBadge","height","src","alt","PageTitle","_useState","useState","_useState2","_slicedToArray","setStreamer","streamerId","useParams","useEffect","getStreamerInfo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetchAPI","concat","sent","stop","apply","arguments","HeroBg","image","bigimage"],"sourceRoot":""}