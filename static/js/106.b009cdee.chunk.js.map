{"version":3,"file":"static/js/106.b009cdee.chunk.js","mappings":"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","sources":["components/NavLinkBtn/NavLinkBtn.styled.jsx","components/NavLinkBtn/NavLinkBtn.jsx","socket.js","assets/data/SelectGenresOptionData.js","helpers/FormValidationSchemas.js","components/Forms/SelectInput/SelectInput.styled.jsx","components/Forms/SelectInput/SelectInput.jsx","components/Forms/GeneralInput/GeneralInput.styled.jsx","components/Forms/GeneralInput/GeneralInput.jsx","components/Forms/TextareaInput/TextareaInput.styled.jsx","components/Forms/TextareaInput/TextareaInput.jsx","components/Forms/FileInput/FileInput.styled.jsx","components/Forms/FileInput/FileInput.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Forms/PlatformOptions/PlatformOptions.styled.jsx","components/Forms/PlatformOptions/PlatformOptions.jsx","components/Forms/StreamerForm/StreamerForm.styled.jsx","components/Forms/StreamerForm/StreamerForm.jsx","assets/data/FilterSelectOptionsData.js","components/FilterMenu/FilterMenu.styled.jsx","components/FilterMenu/FilterMenu.jsx","components/StreamersList/StreamersCard/StreamersCard.Styled.jsx","components/StreamersList/StreamersCard/StreamersCard.jsx","components/Controllers/Controllers.styled.jsx","components/Controllers/Controllers.jsx","components/UserMessage/UserMessage.styled.jsx","components/UserMessage/UserMessage.jsx","components/StreamersList/StreamersList.styled.jsx","components/StreamersList/StreamersList.jsx","pages/StreamersPage/StreamersPage.styled.jsx","pages/StreamersPage/StreamersPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0 auto;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 1em;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './NavLinkBtn.styled';\n\nexport const NavLinkBtn = ({ direction, text }) => {\n  return <StyledLink to={direction}>{text}</StyledLink>;\n};\n\nNavLinkBtn.propTypes = {\n  direction: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import { io } from 'socket.io-client';\n\nexport const socket = io.connect(\n  'https://daredrop-streaming-backend.onrender.com'\n);\n","export const genreOptions = [\n  {\n    value: 'alternative',\n    label: 'Alternative',\n  },\n  {\n    value: 'challenge',\n    label: 'Challenge',\n  },\n  {\n    value: 'comedy',\n    label: 'Comedy',\n  },\n  {\n    value: 'creative',\n    label: 'Creative',\n  },\n  {\n    value: 'educational',\n    label: 'Educational',\n  },\n  {\n    value: 'games',\n    label: 'Games',\n  },\n  {\n    value: 'interview',\n    label: 'Interview',\n  },\n  {\n    value: 'irl',\n    label: 'IRL',\n  },\n  {\n    value: 'movies',\n    label: 'Movies',\n  },\n  {\n    value: 'reactions',\n    label: 'Reactions',\n  },\n  {\n    value: 'tutorials',\n    label: 'Tutorials',\n  },\n  {\n    value: 'webcasts',\n    label: 'Webcasts',\n  },\n];\n","import { object, string, mixed } from 'yup';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nconst allowedGenres = genreOptions.map(genre => genre.value);\nconst allowedPlatforms = platformOptionsData.map(platformObj =>\n  platformObj.platform.toLowerCase()\n);\n\nexport const StreamerRegisterSchema = object().shape({\n  name: string().required('Streamer name is required'),\n  genre: string().oneOf(allowedGenres, 'Invalide option'),\n  platform: string().oneOf(allowedPlatforms, 'Invalide option'),\n  description: string()\n    .max(1000, 'Description should not exceed 1000 characters')\n    .required('Description is required'),\n  photo: mixed()\n    .test('fileSize', 'File too large', value => {\n      if (!value) {\n        return true;\n      }\n      const MAX_FILE_SIZE = 1024 * 1024;\n      return value.size <= MAX_FILE_SIZE;\n    })\n    .test('fileFormat', 'Unsupported format', value => {\n      if (!value) {\n        return true;\n      }\n      const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\n      return supportedFormats.includes(value.type);\n    }),\n});\n","export const LightThemeSelectStyles = {\n  control: (base, { data, isDisabled, isFocused, isSelected }) => ({\n    ...base,\n    marginTop: 8,\n    background: `#FFFFFF`,\n    color: `#000000`,\n    outline: isFocused ? `1px solid #E91E63` : `1px solid #000000`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#FFFFFF`,\n    color: isFocused ? `#FFFFFF` : `#000000`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#000000`,\n  }),\n};\n\nexport const DarkThemeSelectStyles = {\n  control: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    marginTop: 8,\n    background: `#303030`,\n    color: `#FFFFFF`,\n    outline: `1px solid #FFFFFF`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#303030`,\n    color: `#FFFFFF`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#FFFFFF`,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/selectors';\n\nimport Select from 'react-select';\n\nimport {\n  LightThemeSelectStyles,\n  DarkThemeSelectStyles,\n} from './SelectInput.styled';\n\nexport const SelectInput = ({ name, options, setUserChoice, defaultValue }) => {\n  useEffect(() => {\n    if (defaultValue) {\n      setUserChoice(prevState => ({\n        ...prevState,\n        [`${name}`]: defaultValue.value,\n      }));\n    }\n  }, [name, defaultValue, setUserChoice]);\n\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const selectCustomStyles = currentTheme =>\n    currentTheme ? LightThemeSelectStyles : DarkThemeSelectStyles;\n\n  return (\n    <>\n      <Select\n        name={name}\n        options={options}\n        styles={selectCustomStyles(currentTheme)}\n        onChange={choice =>\n          setUserChoice(prevState => ({\n            ...prevState,\n            [`${name}`]: choice.value,\n          }))\n        }\n        defaultValue={defaultValue}\n      />\n    </>\n  );\n};\n\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setUserChoice: PropTypes.func.isRequired,\n  defaultValue: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledInput,\n  ValidationThumb,\n  StyledValidation,\n} from './GeneralInput.styled';\n\nexport const GeneralInput = ({ type, name, placeholder, formik, submited }) => {\n  return (\n    <ValidationThumb>\n      <StyledInput\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={formik.handleChange}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nGeneralInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledTextarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  resize: none;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  &::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: ${({ theme }) => theme.commonColors.linksBg};\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.commonColors.linksBg};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 275px;\n    font-size: 18px;\n  }\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledTextarea,\n  ValidationThumb,\n  StyledValidation,\n} from './TextareaInput.styled';\n\nexport const TextareaInput = ({\n  name,\n  rows,\n  placeholder,\n  formik,\n  submited,\n}) => {\n  return (\n    <ValidationThumb>\n      <StyledTextarea\n        name={name}\n        rows={rows}\n        placeholder={placeholder}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        onChange={formik.handleChange}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nTextareaInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  rows: PropTypes.number.isRequired,\n  placeholder: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  height: 110px;\n  margin-top: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  outline: 1px dashed ${({ theme }) => theme.textColors.mainText};\n  background-color: ${({ theme }) => theme.bgColors.fileInputBg};\n  cursor: pointer;\n\n  font-family: 'MontserratMedium';\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.bgColors.fileInputHoverBg};\n  }\n\n  ::file-selector-button {\n    background-color: transparent;\n    border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n    border-radius: 37.5px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n      color: ${({ theme }) => theme.commonColors.contrastText};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledLabel,\n  StyledInput,\n  ValidationThumb,\n  StyledValidation,\n} from './FileInput.styled';\n\nexport const FileInput = ({ name, formik, submited, isFile, setIsFile }) => {\n  const handleFile = async e => {\n    setIsFile(e.target.files[0]);\n    formik.setFieldValue('photo', e.target.files[0]);\n    await Promise.resolve();\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsFile(e.dataTransfer.files[0]);\n  };\n\n  const handleDefault = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <ValidationThumb>\n      <StyledLabel\n        onDragStart={e => handleDefault(e)}\n        onDragLeave={e => handleDefault(e)}\n        onDragOver={e => handleDefault(e)}\n        onDrop={e => handleDrop(e)}\n      >\n        {isFile\n          ? `Streamer photo is chosen`\n          : 'Click here to add streamer photo'}\n\n        <StyledInput\n          type=\"file\"\n          name={name}\n          // value={formik.values[`${name}`]}\n          submited={submited}\n          error={formik.errors[`${name}`]}\n          onChange={handleFile}\n        />\n      </StyledLabel>\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nFileInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n  isFile: PropTypes.object,\n  setIsFile: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  position: relative;\n\n  display: inline-block;\n  padding: 8px 20px;\n  margin: 20px auto 0;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledBtn } from './Button.styled';\n\nexport const Button = ({ type, text, onClick }) => {\n  return (\n    <StyledBtn type={type} onClick={onClick}>\n      {text}\n    </StyledBtn>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  column-gap: 5px;\n  row-gap: 5px;\n  grid-template-columns: 1fr 9fr;\n  grid-template-rows: 1fr 3fr;\n\n  width: 100%;\n  height: 100px;\n  padding: 5px 0;\n\n  @media screen and (min-width: 768px) {\n    height: 120px;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 22px;\n  height: 22px;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n  justify-self: end;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 42px;\n    height: 42px;\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 2 / 3;\n  align-self: center;\n  justify-self: start;\n\n  font-family: 'MontserratBold';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  grid-row: 2 / 3;\n  grid-column: 1 / 3;\n\n  font-family: 'MontserratRegular';\n  font-size: 14px;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nimport {\n  Container,\n  StyledLabel,\n  StyledLogo,\n  StyledText,\n} from './PlatformOptions.styled';\n\nconst OptionLabel = ({ platformName, imgURL, description }) => {\n  return (\n    <Container>\n      <StyledLogo src={imgURL} alt={`${platformName} logo`} />\n      <StyledLabel>{platformName}</StyledLabel>\n      <StyledText>{description}</StyledText>\n    </Container>\n  );\n};\n\nexport const platformOptions = platformOptionsData.map(\n  ({ platform, imgURL, description }) => {\n    return {\n      value: platform.toLowerCase(),\n      label: (\n        <OptionLabel\n          platformName={platform}\n          imgURL={imgURL}\n          description={description}\n        />\n      ),\n    };\n  }\n);\n\nOptionLabel.propTypes = {\n  platformName: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  border-radius: 8px;\n  background-color: #f18585;\n\n  font-family: 'MontserratRegular';\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    width: 550px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 900px;\n  }\n`;\n\nexport const FormBg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  background-image: ${({ theme }) => theme.bgImages.streamerFormBg};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  filter: blur(4px);\n  -webkit-filter: blur(4px);\n`;\n\nexport const StyledForm = styled.form`\n  position: relative;\n  z-index: 10;\n\n  > button {\n    left: 50%;\n    transform: translateX(-50%);\n\n    @media screen and (min-width: 1200px) {\n      left: 90%;\n    }\n  }\n`;\n\nexport const StyledFormTitle = styled.h3`\n  margin-bottom: 10px;\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StyledFormLayoutThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr;\n    column-gap: 40px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { StreamerRegisterSchema } from 'helpers/FormValidationSchemas';\n\nimport { SelectInput } from '../SelectInput/SelectInput';\nimport { GeneralInput } from '../GeneralInput/GeneralInput';\nimport { TextareaInput } from '../TextareaInput/TextareaInput';\nimport { FileInput } from '../FileInput/FileInput';\nimport { Button } from '../../Button/Button';\n\nimport { platformOptions } from '../PlatformOptions/PlatformOptions';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\n\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport {\n  Container,\n  FormBg,\n  StyledForm,\n  StyledFormTitle,\n  StyledFormLayoutThumb,\n  StyledLabel,\n} from './StreamerForm.styled';\n\nexport const StreamerForm = () => {\n  const [userChoice, setUserChoice] = useState({});\n  const [isFile, setIsFile] = useState(null);\n  const [isSubmited, setIsSubmited] = useState('false');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      genre: '',\n      platform: '',\n      description: '',\n      photo: '',\n    },\n    validationSchema: StreamerRegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      const formData = new FormData();\n      formData.append('name', values.name);\n      formData.append('genre', userChoice.genre);\n      formData.append('platform', userChoice.platform);\n      formData.append('description', values.description);\n      formData.append('photo', isFile);\n\n      fetchAPI('post', '/api/streamers', formData);\n      resetForm();\n      setIsFile(null);\n      setIsSubmited('false');\n    },\n  });\n\n  const handleValidation = e => {\n    e.preventDefault();\n    setIsSubmited('true');\n    formik.handleSubmit();\n  };\n\n  return (\n    <Container>\n      <FormBg />\n      <StyledForm>\n        <StyledFormTitle>Join the community!</StyledFormTitle>\n        <StyledFormLayoutThumb>\n          <div>\n            <StyledLabel>\n              Streamer name\n              <GeneralInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <StyledLabel>\n              Choose your platform\n              <SelectInput\n                name=\"platform\"\n                options={platformOptions}\n                setUserChoice={setUserChoice}\n                defaultValue={platformOptions[0]}\n                value={formik.values['platform']}\n                error={formik.errors['platform']}\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <FileInput\n              name=\"photo\"\n              submited={isSubmited}\n              formik={formik}\n              isFile={isFile}\n              setIsFile={setIsFile}\n            />\n          </div>\n          <div>\n            <StyledLabel>\n              Streaming genre\n              <SelectInput\n                name=\"genre\"\n                options={genreOptions}\n                setUserChoice={setUserChoice}\n                defaultValue={genreOptions[0]}\n                value={formik.values['genre']}\n                error={formik.errors['genre']}\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <StyledLabel>\n              Add streamer activity description\n              <TextareaInput\n                name=\"description\"\n                rows={5}\n                placeholder=\"Enter streamer activity description\"\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n          </div>\n        </StyledFormLayoutThumb>\n        <Button type=\"submit\" text=\"Submit\" onClick={handleValidation} />\n      </StyledForm>\n    </Container>\n  );\n};\n","export const sortFilterOptions = [\n  {\n    value: 'newest',\n    label: 'Newest',\n  },\n  {\n    value: 'oldest',\n    label: 'Oldest',\n  },\n  {\n    value: 'upvote',\n    label: 'Upvotes',\n  },\n  {\n    value: 'downvote',\n    label: 'Downvotes',\n  },\n];\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 20px 0 0;\n  padding: 20px;\n\n  background-color: ${({ theme }) => theme.bgColors.filterMenuBg};\n  border-radius: 22px;\n\n  > button {\n    @media screen and (min-width: 768px) {\n      left: 90%;\n    }\n  }\n`;\n\nexport const FiltersTitle = styled.h3`\n  margin-bottom: 10px;\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 26px;\n  }\n`;\n\nexport const FiltersThumb = styled.div`\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    column-gap: 30px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n  margin-top: 10px;\n\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  sortFilterOptions,\n  genreOptions,\n  platformFilterOptions,\n} from 'assets/data/index';\n\nimport { SelectInput } from 'components/Forms/SelectInput/SelectInput';\nimport {\n  Container,\n  FiltersThumb,\n  StyledLabel,\n  FiltersTitle,\n} from './FilterMenu.styled';\n\nexport const FilterMenu = ({ setUserChoice }) => {\n  return (\n    <Container>\n      <FiltersTitle>Select yout filters</FiltersTitle>\n      <FiltersThumb>\n        <StyledLabel>\n          Platform\n          <SelectInput\n            name=\"platform\"\n            options={platformFilterOptions}\n            setUserChoice={setUserChoice}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Genre\n          <SelectInput\n            name=\"genre\"\n            options={genreOptions}\n            setUserChoice={setUserChoice}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Sort by\n          <SelectInput\n            name=\"sort\"\n            options={sortFilterOptions}\n            setUserChoice={setUserChoice}\n            defaultValue={sortFilterOptions[0]}\n          />\n        </StyledLabel>\n      </FiltersThumb>\n    </Container>\n  );\n};\n\nFilterMenu.propTypes = {\n  setUserChoice: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  width: 100%;\n  height: 280px;\n  padding: 10px;\n  border-radius: 8px;\n\n  font-size: 14px;\n\n  background-image: linear-gradient(\n    315deg,\n    rgba(233, 30, 99, 0.5) 0%,\n    rgba(48, 79, 254, 0.5) 100%\n  );\n\n  @media screen and (min-width: 480px) {\n    gap: 10px;\n    width: 450px;\n    padding: 15px 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 350px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 115px;\n  height: 45%;\n\n  border-radius: 8px;\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 50%;\n  border-bottom-left-radius: 45%;\n\n  border-right-width: 10px;\n  border-right-style: solid;\n  border-right-color: ${({ theme }) => theme.textColors.accentText};\n\n  border-bottom-width: 10px;\n  border-bottom-style: solid;\n  border-bottom-color: ${({ theme }) => theme.textColors.accentText};\n\n  overflow: hidden;\n\n  @media screen and (min-width: 480px) {\n    width: 150px;\n    height: 55%;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 110px;\n    height: 50%;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 130px;\n    height: 50%;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 150px;\n    height: 55%;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const InfoThumb = styled.div`\n  display: grid;\n  grid-template-rows: repeat(8, 1fr);\n  grid-template-columns: repeat(3, 1fr);\n  row-gap: 10px;\n  justify-items: center;\n  align-items: center;\n\n  width: 100%;\n  height: 85%;\n\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  & div:nth-child(2) {\n    grid-row: 3 / 4;\n    grid-column: 2 / 4;\n  }\n\n  & div:nth-child(3) {\n    grid-row: 4 / 5;\n    grid-column: 2 / 4;\n  }\n\n  & p:nth-child(4) {\n    grid-row: 5 / 6;\n    grid-column: 2 / 4;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  grid-row: 1 / 3;\n  grid-column: 2 / 4;\n\n  color: ${({ theme }) => theme.textColors.accentText};\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nexport const VoteThumb = styled.div`\n  display: grid;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 5px;\n  justify-items: center;\n\n  grid-row: 6 / 9;\n  grid-column: 1 / 4;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 10px;\n  }\n`;\n\nexport const UpvotesText = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n\n  color: ${({ theme }) => theme.commonColors.inputCorrectText};\n  font-size: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  > svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\nexport const DownvotesText = styled(UpvotesText)`\n  grid-column: 2 / 3;\n  color: ${({ theme }) => theme.commonColors.inputErrorText};\n\n  > svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const UpvoteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: end;\n\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n\n  min-width: 100px;\n  padding: 5px 20px;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.inputCorrectText};\n  border-radius: 37.5px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.inputCorrectText};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.commonColors.inputCorrectText};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 150px;\n    padding: 5px 15px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 5px 20px;\n  }\n\n  > svg {\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n\n    @media screen and (min-width: 768px) {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const DownvoteBtn = styled(UpvoteBtn)`\n  grid-column: 2 / 3;\n  border: 3px solid ${({ theme }) => theme.commonColors.inputErrorText};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.inputErrorText};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.commonColors.inputErrorText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport {\n  addUpvotedStreamers,\n  addDownvotedStreamers,\n  removeUpvotedStreamers,\n  removeDownvotedStreamers,\n} from 'redux/streamers/streamersSilce';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUpvotedStreamers,\n  selectDownvotedStreamers,\n} from 'redux/selectors';\n\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im';\nimport { FaRegThumbsUp, FaRegThumbsDown } from 'react-icons/fa';\n\nimport { StaredRating } from 'components/Badges/Rating/StarRating';\nimport { PlatformBadge } from 'components/Badges/PlatformBadge/PlatformBadge';\nimport { GenreBadge } from 'components/Badges/GenreBadge/GenreBadge';\nimport { NavLinkBtn } from 'components/NavLinkBtn/NavLinkBtn';\n\nimport {\n  Container,\n  ImageThumb,\n  StyledImg,\n  InfoThumb,\n  CardTitle,\n  UpvotesText,\n  DownvotesText,\n  VoteThumb,\n  UpvoteBtn,\n  DownvoteBtn,\n} from './StreamersCard.Styled';\n\nexport const StreamersCard = ({\n  streamer: { _id, name, photoURL, genre, platform, upvote, downvote },\n}) => {\n  const [isUpvoted, setIsUpvoted] = useState(false);\n  const [isDownvoted, setIsDownvoted] = useState(false);\n  const [rating, setRating] = useState(0);\n  const upvotedStreamers = useSelector(selectUpvotedStreamers);\n  const downvotedStreamers = useSelector(selectDownvotedStreamers);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const upvotedState = upvotedStreamers.find(\n      streamerId => streamerId === _id\n    );\n    const downvotedState = downvotedStreamers.find(\n      streamerId => streamerId === _id\n    );\n\n    upvotedState ? setIsUpvoted(true) : setIsUpvoted(false);\n    downvotedState ? setIsDownvoted(true) : setIsDownvoted(false);\n  }, [upvotedStreamers, downvotedStreamers, _id]);\n\n  useEffect(() => {\n    const ratingRatio = upvote / (upvote + downvote);\n    const currentRating = Math.round(ratingRatio * 5 * 100) / 100;\n    setRating(currentRating);\n  }, [upvote, downvote]);\n\n  const handleUpvote = () => {\n    if (isDownvoted) {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, {\n        downvote: downvote - 1,\n      });\n      dispatch(removeDownvotedStreamers(_id));\n    } else {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, { upvote: upvote + 1 });\n      dispatch(addUpvotedStreamers(_id));\n    }\n  };\n\n  const handleDownvote = () => {\n    if (isUpvoted) {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, { upvote: upvote - 1 });\n      dispatch(removeUpvotedStreamers(_id));\n    } else {\n      fetchAPI('put', `/api/streamers/${_id}/vote`, {\n        downvote: downvote + 1,\n      });\n      dispatch(addDownvotedStreamers(_id));\n    }\n  };\n\n  return (\n    <Container>\n      <ImageThumb>\n        <StyledImg src={photoURL} alt={name} width=\"150px\" height=\"250px\" />\n      </ImageThumb>\n      <InfoThumb>\n        <CardTitle>{name}</CardTitle>\n        <StaredRating\n          rating={rating}\n          style={{ maxWidth: 90, justifySelf: 'end', marginRight: 15 }}\n        />\n        <PlatformBadge platform={platform} height={20} />\n        <GenreBadge genre={genre} />\n        <VoteThumb>\n          <UpvotesText>\n            <ImArrowUp /> {upvote}\n          </UpvotesText>\n          <DownvotesText>\n            <ImArrowDown />\n            {downvote}\n          </DownvotesText>\n          <UpvoteBtn onClick={handleUpvote} disabled={isUpvoted}>\n            <FaRegThumbsUp /> {isUpvoted ? 'Upvoted' : 'Upvote'}\n          </UpvoteBtn>\n          <DownvoteBtn onClick={handleDownvote} disabled={isDownvoted}>\n            <FaRegThumbsDown />\n            {isDownvoted ? 'Downvoted' : 'Downvote'}\n          </DownvoteBtn>\n        </VoteThumb>\n      </InfoThumb>\n      <NavLinkBtn direction={`/streamers/${_id}`} text=\"View Details\" />\n    </Container>\n  );\n};\n\nStreamersCard.propTypes = {\n  streamer: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    photoURL: PropTypes.string,\n    genre: PropTypes.string.isRequired,\n    platform: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    upvote: PropTypes.number.isRequired,\n    downvote: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  justify-content: center;\n`;\n\nexport const StyledBtn = styled.button`\n  display: inline-block;\n  padding: 8px 15px;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 1em;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.commonColors.socialsBg};\n    border: 3px solid ${({ theme }) => theme.commonColors.socialsBg};\n    color: ${({ theme }) => theme.commonColors.disabledBtnText};\n  }\n\n  > svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { ImArrowLeft, ImArrowRight } from 'react-icons/im';\nimport { Container, StyledBtn } from './Controllers.styled';\n\nexport const Controllers = ({ page, maxPages, setPage }) => {\n  const [isBackwardsDisabled, setIsBackwardsDisabled] = useState(true);\n  const [isForwardsDisabled, setIsForwardsDisabled] = useState(false);\n\n  useEffect(() => {\n    if (page === 1) {\n      setIsBackwardsDisabled(true);\n      setIsForwardsDisabled(false);\n    } else if (page === maxPages) {\n      setIsBackwardsDisabled(false);\n      setIsForwardsDisabled(true);\n    } else {\n      setIsBackwardsDisabled(false);\n      setIsForwardsDisabled(false);\n    }\n  }, [page, maxPages]);\n\n  const handleNextPage = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handlePreviousPage = () => {\n    setPage(prevState => prevState - 1);\n  };\n\n  return (\n    <Container>\n      <StyledBtn\n        type=\"button\"\n        aria-label=\"backwards\"\n        onClick={handlePreviousPage}\n        disabled={isBackwardsDisabled}\n      >\n        <ImArrowLeft />\n      </StyledBtn>\n      <StyledBtn\n        type=\"button\"\n        aria-label=\"forwards\"\n        onClick={handleNextPage}\n        disabled={isForwardsDisabled}\n      >\n        <ImArrowRight />\n      </StyledBtn>\n    </Container>\n  );\n};\n\nControllers.propTypes = {\n  page: PropTypes.number.isRequired,\n  maxPages: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMessage = styled.p`\n  padding: 20px;\n  font-family: 'MontserratBold';\n  font-size: 22px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 50px;\n    font-size: 28px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 100px;\n    font-size: 34px;\n  }\n`;\n","import { StyledMessage } from './UserMessage.styled';\n\nexport const UserMessage = ({ children }) => {\n  return <StyledMessage>{children}</StyledMessage>;\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n\n  margin: 20px 0;\n\n  @media screen and (min-width: 1200px) {\n    gap: 30px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { StreamersCard } from './StreamersCard/StreamersCard';\nimport { Controllers } from 'components/Controllers/Controllers';\nimport { UserMessage } from 'components/UserMessage/UserMessage';\nimport { StyledList } from './StreamersList.styled';\n\nexport const StreamersList = ({ streamers, maxPages, page, setPage }) => {\n  return (\n    <>\n      {streamers.length > 0 ? (\n        <StyledList>\n          {streamers.map(streamer => {\n            return <StreamersCard key={streamer._id} streamer={streamer} />;\n          })}\n        </StyledList>\n      ) : (\n        <UserMessage>\n          Results with this filters are not found. <br /> Please, try other\n          options.\n        </UserMessage>\n      )}\n\n      {maxPages > 1 && (\n        <Controllers page={page} maxPages={maxPages} setPage={setPage} />\n      )}\n    </>\n  );\n};\n\nStreamersList.propTypes = {\n  streamers: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from 'styled-components';\nimport * as streamersBg from 'assets/images/main/streamers_bg-min.png';\nimport * as streamersBigBg from 'assets/images/main/streamers_bg@2x-min.png';\n\nexport const HeroSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: center;\n\n  height: 120px;\n  padding: 0 40px;\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    height: 140px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 180px;\n  }\n`;\n\nexport const HeroSubtitle = styled.p`\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const HeroTitle = styled.h1`\n  font-family: 'MontserratBold';\n  font-size: 22px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 42px;\n  }\n`;\n\nexport const FormSection = styled.section`\n  padding: 40px;\n`;\n\nexport const FormSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const StreamersSection = styled.section`\n  width: 100%;\n  min-height: 800px;\n  padding: 20px 40px;\n\n  background-image: url(${streamersBg.default});\n  background-repeat: no-repeat;\n  background-size: 150% 700px;\n  background-position: top 100px left 0;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${streamersBigBg.default});\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 40px;\n  }\n`;\n\nexport const StreamersSectionTitle = styled.h2`\n  font-family: 'MontserratBold';\n  font-size: 34px;\n`;\n\nexport const TitleAccent = styled.span`\n  display: block;\n  color: ${({ theme }) => theme.textColors.accentText};\n`;\n","import { useState, useEffect } from 'react';\nimport { socket } from 'socket';\nimport { getStreamersAPI } from 'helpers/backendAPI';\n\nimport { HeroBg } from 'components/Decoration/HeroBg/HeroBg';\nimport * as heroBg from 'assets/images/main/hero-min.jpg';\nimport * as bigHeroBg from 'assets/images/main/hero@2x-min.jpg';\n\nimport { StreamerForm } from 'components/Forms/StreamerForm/StreamerForm';\nimport { FilterMenu } from 'components/FilterMenu/FilterMenu';\nimport { StreamersList } from 'components/StreamersList/StreamersList';\nimport { UserMessage } from 'components/UserMessage/UserMessage';\nimport {\n  HeroSection,\n  HeroSubtitle,\n  HeroTitle,\n  FormSection,\n  FormSectionTitle,\n  StreamersSection,\n  StreamersSectionTitle,\n  TitleAccent,\n} from './StreamersPage.styled';\n\nconst StreamersPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [streamers, setStreamers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [maxPages, setMaxPages] = useState(0);\n  const [userChoice, setUserChoice] = useState({});\n  const limit = 6;\n\n  useEffect(() => {\n    socket.on(\n      'data-changed',\n      ({\n        operationType,\n        fullDocument,\n        documentKey: { _id },\n        updateDescription,\n      }) => {\n        if (operationType === 'insert') {\n          setStreamers(prevState => [fullDocument, ...prevState]);\n        } else if (operationType === 'update') {\n          setStreamers(prevState => {\n            const newStreamers = prevState.map(streamer => {\n              if (streamer._id === _id) {\n                return { ...streamer, ...updateDescription.updatedFields };\n              } else {\n                return streamer;\n              }\n            });\n            return newStreamers;\n          });\n        }\n      }\n    );\n\n    return () => {\n      socket.off('data-changed');\n    };\n  }, [streamers]);\n\n  useEffect(() => {\n    setPage(1);\n  }, [userChoice]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getStreamers = async () => {\n      const params = { page, limit, ...userChoice };\n\n      try {\n        const response = await getStreamersAPI(params);\n        setStreamers(response.results);\n        const maxResultPages = Math.ceil(response.totalCount / limit);\n        setMaxPages(maxResultPages);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getStreamers();\n  }, [page, limit, userChoice]);\n\n  return (\n    <>\n      <HeroBg image={heroBg.default} bigimage={bigHeroBg.default} />\n      <HeroSection>\n        <HeroSubtitle>Welcome to the Dare Drop Streaming Service</HeroSubtitle>\n        <HeroTitle>Find the best streamer to your liking!</HeroTitle>\n      </HeroSection>\n      <FormSection>\n        <FormSectionTitle>Join the platform</FormSectionTitle>\n        <StreamerForm />\n      </FormSection>\n      <StreamersSection>\n        <StreamersSectionTitle>\n          Dare Drop <TitleAccent>Top Streamers</TitleAccent>\n        </StreamersSectionTitle>\n        <FilterMenu setUserChoice={setUserChoice} />\n        {isLoading ? (\n          <UserMessage>Please, wait. The data is fetching.</UserMessage>\n        ) : (\n          <StreamersList\n            streamers={streamers}\n            maxPages={maxPages}\n            page={page}\n            setPage={setPage}\n          />\n        )}\n      </StreamersSection>\n    </>\n  );\n};\n\nexport default StreamersPage;\n"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","_ref","theme","commonColors","accentElemBg","_ref2","textColors","mainText","_ref3","_ref4","contrastText","NavLinkBtn","direction","text","_jsx","to","children","socket","io","genreOptions","value","label","allowedGenres","map","genre","allowedPlatforms","platformOptionsData","platformObj","platform","toLowerCase","StreamerRegisterSchema","object","shape","name","string","required","oneOf","description","max","photo","mixed","test","size","includes","type","LightThemeSelectStyles","control","base","data","isDisabled","isFocused","isSelected","_objectSpread","marginTop","background","color","outline","option","styles","backgroundColor","singleValue","state","DarkThemeSelectStyles","SelectInput","options","setUserChoice","defaultValue","useEffect","prevState","_defineProperty","concat","currentTheme","useSelector","selectCurrentTheme","_Fragment","Select","selectCustomStyles","onChange","choice","validateColor","error","submited","inputErrorText","inputCorrectText","StyledInput","bgColors","mainBg","ValidationThumb","_templateObject2","StyledValidation","_templateObject3","_ref5","GeneralInput","placeholder","formik","_jsxs","handleChange","values","errors","touched","StyledTextarea","linksBg","_ref6","_ref7","_ref8","TextareaInput","rows","StyledLabel","fileInputBg","fileInputHoverBg","_templateObject4","FileInput","isFile","setIsFile","handleFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","target","files","setFieldValue","Promise","resolve","stop","_x","apply","arguments","handleDefault","preventDefault","onDragStart","onDragLeave","onDragOver","onDrop","dataTransfer","handleDrop","StyledBtn","Button","onClick","Container","StyledLogo","StyledText","OptionLabel","platformName","imgURL","src","alt","platformOptions","FormBg","bgImages","streamerFormBg","StyledForm","StyledFormTitle","StyledFormLayoutThumb","_templateObject5","_templateObject6","StreamerForm","_useState","useState","_useState2","_slicedToArray","userChoice","_useState3","_useState4","_useState5","_useState6","isSubmited","setIsSubmited","useFormik","initialValues","validationSchema","onSubmit","resetForm","formData","FormData","append","fetchAPI","handleSubmit","sortFilterOptions","filterMenuBg","FiltersTitle","FiltersThumb","FilterMenu","platformFilterOptions","ImageThumb","accentText","StyledImg","InfoThumb","CardTitle","VoteThumb","UpvotesText","_templateObject7","DownvotesText","_templateObject8","UpvoteBtn","_templateObject9","_ref9","_ref10","_ref11","DownvoteBtn","_templateObject10","_ref12","_ref13","_ref14","StreamersCard","_ref$streamer","streamer","_id","photoURL","upvote","downvote","isUpvoted","setIsUpvoted","isDownvoted","setIsDownvoted","rating","setRating","upvotedStreamers","selectUpvotedStreamers","downvotedStreamers","selectDownvotedStreamers","dispatch","useDispatch","upvotedState","find","streamerId","downvotedState","ratingRatio","currentRating","Math","round","width","height","StaredRating","style","maxWidth","justifySelf","marginRight","PlatformBadge","GenreBadge","ImArrowUp","ImArrowDown","removeDownvotedStreamers","addUpvotedStreamers","disabled","FaRegThumbsUp","removeUpvotedStreamers","addDownvotedStreamers","FaRegThumbsDown","socialsBg","disabledBtnText","Controllers","page","maxPages","setPage","isBackwardsDisabled","setIsBackwardsDisabled","isForwardsDisabled","setIsForwardsDisabled","ImArrowLeft","ImArrowRight","StyledMessage","UserMessage","StyledList","StreamersList","streamers","length","HeroSection","HeroSubtitle","HeroTitle","FormSection","FormSectionTitle","StreamersSection","streamersBg","streamersBigBg","StreamersSectionTitle","TitleAccent","isLoading","setIsLoading","setStreamers","_useState7","_useState8","setMaxPages","_useState9","_useState10","on","operationType","fullDocument","documentKey","updateDescription","_toConsumableArray","updatedFields","off","getStreamers","params","response","maxResultPages","limit","getStreamersAPI","sent","results","ceil","totalCount","t0","console","finish","HeroBg","image","heroBg","bigimage","bigHeroBg"],"sourceRoot":""}