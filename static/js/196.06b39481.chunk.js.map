{"version":3,"file":"static/js/196.06b39481.chunk.js","mappings":"gNAEMA,EAAW,kDAEJC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAQC,EAASC,GAAI,IAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAIjC,QAAXN,EAAgB,CAAAK,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACDC,EAAAA,EAAAA,IAAU,GAADC,OAAIhB,GAAQgB,OAAGR,IAAW,KAAD,EAAnDE,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,mBACY,SAAXP,EAAiB,CAAAK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACTC,EAAAA,EAAAA,KAAW,GAADC,OAAIhB,GAAQgB,OAAGR,GAAWC,GAAM,KAAD,GAA1DC,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,oBACY,QAAXP,EAAgB,CAAAK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACRC,EAAAA,EAAAA,IAAU,GAADC,OAAIhB,GAAQgB,OAAGR,GAAWC,GAAM,KAAD,GAAzDC,EAAQE,EAAAK,KAAA,eAAAL,EAAAM,OAAA,SAGHR,EAASD,MAAI,WAAAG,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,UAEhBG,EAAAA,EAAAA,SAAcH,EAAAO,IAAI,CAADP,EAAAE,KAAA,gBAAAF,EAAAM,OAAA,kBAGrBE,QAAQC,MAAKT,EAAAO,IAAI,yBAAAP,EAAAU,OAAA,GAAAhB,EAAA,mBAEpB,gBAnBoBiB,EAAAC,EAAAC,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,I,6ICJRC,EAAiB,SAAH1B,GAYpB,IAAD2B,EAAA3B,EAXJ4B,SAEEC,GADGF,EAAHG,IACIH,EAAJE,MACQF,EAARI,SACKJ,EAALK,MACQL,EAARM,SACWN,EAAXO,YACMP,EAANQ,OACMR,EAANS,OACQT,EAARU,SAGF,OACEC,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKV,KAGX,ECQA,EApB2B,WACzB,IAAAW,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCZ,EAAQc,EAAA,GAAEE,EAAWF,EAAA,GACpBG,GAAeC,EAAAA,EAAAA,MAAfD,WAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAhD,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAI,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACCb,EAAAA,EAAAA,GAAS,MAAM,kBAADe,OAAoB+B,IAAc,KAAD,EAAhErC,EAAQE,EAAAK,KACd6B,EAAYpC,GAAU,wBAAAE,EAAAU,OAAA,GAAAhB,EAAA,KACvB,kBAHoB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAKrBuB,GACF,GAAG,CAACH,KAGFP,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAV,UACED,EAAAA,EAAAA,KAACZ,EAAc,CAACE,SAAUA,KAGhC,C","sources":["helpers/backendAPI.js","components/StreamerRecord/StreamerRecord.jsx","pages/StreamerRecordPage/StreamerRecordPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URI = 'https://daredrop-streaming-backend.onrender.com';\n\nexport const fetchAPI = async (method, address, data) => {\n  try {\n    let response;\n\n    if (method === 'get') {\n      response = await axios.get(`${BASE_URI}${address}`);\n    } else if (method === 'post') {\n      response = await axios.post(`${BASE_URI}${address}`, data);\n    } else if (method === 'put') {\n      response = await axios.put(`${BASE_URI}${address}`, data);\n    }\n\n    return response.data;\n  } catch (e) {\n    if (axios.isCancel(e)) {\n      return;\n    }\n    console.error(e);\n  }\n};\n","export const StreamerRecord = ({\n  streamer: {\n    _id,\n    name,\n    photoURI,\n    genre,\n    platform,\n    description,\n    rating,\n    upvote,\n    downvote,\n  },\n}) => {\n  return (\n    <section>\n      <h2>{name}</h2>\n    </section>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { StreamerRecord } from 'components/StreamerRecord/StreamerRecord';\n\nconst StreamerRecordPage = () => {\n  const [streamer, setStreamer] = useState({});\n  const { streamerId } = useParams();\n\n  useEffect(() => {\n    const getStreamerInfo = async () => {\n      const response = await fetchAPI('get', `/api/streamers/${streamerId}`);\n      setStreamer(response);\n    };\n\n    getStreamerInfo();\n  }, [streamerId]);\n\n  return (\n    <>\n      <StreamerRecord streamer={streamer} />\n    </>\n  );\n};\n\nexport default StreamerRecordPage;\n"],"names":["BASE_URI","fetchAPI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","address","data","response","wrap","_context","prev","next","axios","concat","sent","abrupt","t0","console","error","stop","_x","_x2","_x3","apply","arguments","StreamerRecord","_ref$streamer","streamer","name","_id","photoURI","genre","platform","description","rating","upvote","downvote","_jsx","children","_useState","useState","_useState2","_slicedToArray","setStreamer","streamerId","useParams","useEffect","getStreamerInfo","_Fragment"],"sourceRoot":""}