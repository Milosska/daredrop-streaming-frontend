{"version":3,"file":"static/js/883.ed83d59e.chunk.js","mappings":"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","sources":["assets/data/SelectGenresOptionData.js","assets/data/SelectPlatformOptionData.js","helpers/FormValidationSchemas.js","components/Forms/SelectInput/SelectInput.styled.jsx","components/Forms/SelectInput/SelectInput.jsx","components/Forms/GeneralInput/GeneralInput.styled.jsx","components/Forms/GeneralInput/GeneralInput.jsx","components/Forms/PlatformOptions/PlatformOptions.styled.jsx","components/Forms/PlatformOptions/PlatformOptions.jsx","components/Forms/StreamerForm/StreamerForm.styled.jsx","components/Forms/StreamerForm/StreamerForm.jsx","pages/StreamersPage/StreamersPage.styled.jsx","pages/StreamersPage/StreamersPage.jsx"],"sourcesContent":["export const genreOptions = [\n  {\n    value: 'alternative',\n    label: 'Alternative',\n  },\n  {\n    value: 'challenge',\n    label: 'Challenge',\n  },\n  {\n    value: 'comedy',\n    label: 'Comedy',\n  },\n  {\n    value: 'creative',\n    label: 'Creative',\n  },\n  {\n    value: 'educatuinal',\n    label: 'Educatuinal',\n  },\n  {\n    value: 'games',\n    label: 'Games',\n  },\n  {\n    value: 'interview',\n    label: 'Interview',\n  },\n  {\n    value: 'irl',\n    label: 'IRL',\n  },\n  {\n    value: 'movies',\n    label: 'Movies',\n  },\n  {\n    value: 'reactions',\n    label: 'Reactions',\n  },\n  {\n    value: 'tutorials',\n    label: 'Tutorials',\n  },\n  {\n    value: 'webcasts',\n    label: 'Webcasts',\n  },\n];\n","import * as youtubeImg from 'assets/images/platforms/youtube-min.png';\nimport * as tiktokImg from 'assets/images/platforms/tiktok-min.png';\nimport * as twitchImg from 'assets/images/platforms/twitch-min.png';\nimport * as kickImg from 'assets/images/platforms/kick-min.png';\nimport * as rumbleImg from 'assets/images/platforms/rumble-min.png';\n\nexport const platformOptionsData = [\n  {\n    platform: 'YouTube',\n    imgURL: `${youtubeImg.default}`,\n    description:\n      'A popular video hosting service that offers streaming, access to original programming, and offline video playback on mobile devices.',\n  },\n  {\n    platform: 'TikTok',\n    imgURL: `${tiktokImg.default}`,\n    description:\n      'A popular social media app known for its short, creative videos and viral trends.',\n  },\n  {\n    platform: 'Twitch',\n    imgURL: `${twitchImg.default}`,\n    description:\n      'A live-streaming platform primarily focused on gaming, providing a space for gamers and viewers to interact and build communities.',\n  },\n  {\n    platform: 'Kick',\n    imgURL: `${kickImg.default}`,\n    description:\n      'A new and ambitious streaming platform that allows users to create and watch live broadcasts in real time.',\n  },\n  {\n    platform: 'Rumble',\n    imgURL: `${rumbleImg.default}`,\n    description:\n      'A platform where users can share and discover user-generated videos.',\n  },\n];\n","import { object, string } from 'yup';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nconst allowedGenres = genreOptions.map(genre => genre.value);\nconst allowedPlatforms = platformOptionsData.map(platformObj =>\n  platformObj.platform.toLowerCase()\n);\n\nexport const StreamerRegisterSchema = object().shape({\n  name: string()\n    .max(16, 'Streamer name should not exceed 16 characters')\n    .required('Streamer name is required'),\n  genre: string().oneOf(allowedGenres, 'Invalide option'),\n  platform: string().oneOf(allowedPlatforms, 'Invalide option'),\n});\n","export const LightThemeSelectStyles = {\n  control: (base, { data, isDisabled, isFocused, isSelected }) => ({\n    ...base,\n    marginTop: 8,\n    background: `#FFFFFF`,\n    color: `#000000`,\n    outline: isFocused ? `1px solid #E91E63` : `1px solid #000000`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#FFFFFF`,\n    color: isFocused ? `#FFFFFF` : `#000000`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#000000`,\n  }),\n};\n\nexport const DarkThemeSelectStyles = {\n  control: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    marginTop: 8,\n    background: `#303030`,\n    color: `#FFFFFF`,\n    outline: `1px solid #FFFFFF`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#303030`,\n    color: `#FFFFFF`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#FFFFFF`,\n  }),\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/selectors';\n\nimport Select from 'react-select';\n\nimport {\n  LightThemeSelectStyles,\n  DarkThemeSelectStyles,\n} from './SelectInput.styled';\n\nexport const SelectInput = ({ name, options, setUserChoice, defaultValue }) => {\n  useEffect(() => {\n    if (defaultValue) {\n      setUserChoice(prevState => ({\n        ...prevState,\n        [`${name}`]: defaultValue.value,\n      }));\n    }\n  }, [name, defaultValue, setUserChoice]);\n\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const selectCustomStyles = currentTheme =>\n    currentTheme ? LightThemeSelectStyles : DarkThemeSelectStyles;\n\n  return (\n    <>\n      <Select\n        name={name}\n        options={options}\n        styles={selectCustomStyles(currentTheme)}\n        onChange={choice =>\n          setUserChoice(prevState => ({\n            ...prevState,\n            [`${name}`]: choice.value,\n          }))\n        }\n        defaultValue={defaultValue}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import { StyledInput, StyledValidation } from './GeneralInput.styled';\n\nexport const GeneralInput = ({ type, name, placeholder, formik, submited }) => {\n  return (\n    <>\n      <StyledInput\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={formik.handleChange}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  column-gap: 5px;\n  row-gap: 5px;\n  grid-template-columns: 1fr 9fr;\n  grid-template-rows: 1fr 3fr;\n\n  width: 100%;\n  height: 100px;\n\n  @media screen and (min-width: 768px) {\n    height: 80px;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 22px;\n  height: 22px;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n  justify-self: end;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 42px;\n    height: 42px;\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 2 / 3;\n  align-self: center;\n  justify-self: start;\n\n  font-family: 'MontserratBold';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  grid-row: 2 / 3;\n  grid-column: 1 / 3;\n\n  font-family: 'MontserratRegular';\n  font-size: 14px;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 16px;\n  }\n`;\n","import { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nimport {\n  Container,\n  StyledLabel,\n  StyledLogo,\n  StyledText,\n} from './PlatformOptions.styled';\n\nconst OptionLabel = ({ platformName, imgURL, description }) => {\n  return (\n    <Container>\n      <StyledLogo src={imgURL} alt={`${platformName} logo`} />\n      <StyledLabel>{platformName}</StyledLabel>\n      <StyledText>{description}</StyledText>\n    </Container>\n  );\n};\n\nexport const platformOptions = platformOptionsData.map(\n  ({ platform, imgURL, description }) => {\n    return {\n      value: platform.toLowerCase(),\n      label: (\n        <OptionLabel\n          platformName={platform}\n          imgURL={imgURL}\n          description={description}\n        />\n      ),\n    };\n  }\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 80%;\n  margin: 0 auto;\n  padding: 20px;\n  border-radius: 8px;\n  background-color: #f18585;\n\n  font-family: 'MontserratRegular';\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    width: 550px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 700px;\n  }\n`;\n\nexport const FormBg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  background-image: ${({ theme }) => theme.bgImages.streamerFormBg};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  filter: blur(4px);\n  -webkit-filter: blur(4px);\n`;\n\nexport const StyledForm = styled.form`\n  position: relative;\n  z-index: 10;\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  font-size: 18px;\n`;\n\nexport const StyledFormTitle = styled.h3`\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: inline-block;\n  padding: 8px 20px;\n  margin: 0 auto;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 10px auto 0;\n    padding: 8px 20px;\n\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { StreamerRegisterSchema } from 'helpers/FormValidationSchemas';\n\nimport { SelectInput } from '../SelectInput/SelectInput';\nimport { GeneralInput } from '../GeneralInput/GeneralInput';\nimport { platformOptions } from '../PlatformOptions/PlatformOptions';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\n\nimport {\n  Container,\n  FormBg,\n  StyledForm,\n  StyledFormTitle,\n  SubmitBtn,\n  StyledLabel,\n} from './StreamerForm.styled';\n\nexport const StreamerForm = () => {\n  const [userChoice, setUserChoice] = useState({});\n  const [isSubmited, setIsSubmited] = useState('false');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      genre: '',\n      platform: '',\n    },\n    validationSchema: StreamerRegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      values.genre = userChoice.genre;\n      values.platform = userChoice.platform;\n      console.log(values);\n      resetForm();\n      setIsSubmited('false');\n    },\n  });\n\n  const handleValidation = e => {\n    e.preventDefault();\n    setIsSubmited('true');\n    formik.handleSubmit();\n  };\n\n  return (\n    <Container>\n      <FormBg />\n      <StyledForm>\n        <StyledFormTitle>Join the community!</StyledFormTitle>\n        <StyledLabel>\n          Streamer name\n          <GeneralInput\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            submited={isSubmited}\n            formik={formik}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Streaming genre\n          <SelectInput\n            name=\"genre\"\n            options={genreOptions}\n            setUserChoice={setUserChoice}\n            defaultValue={genreOptions[0]}\n            value={formik.values['genre']}\n            error={formik.errors['genre']}\n            submited={isSubmited}\n            formik={formik}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Choose your platform\n          <SelectInput\n            name=\"platform\"\n            options={platformOptions}\n            setUserChoice={setUserChoice}\n            defaultValue={platformOptions[0]}\n            value={formik.values['platform']}\n            error={formik.errors['platform']}\n            submited={isSubmited}\n            formik={formik}\n          />\n        </StyledLabel>\n        <SubmitBtn type=\"submit\" onClick={handleValidation}>\n          Submit\n        </SubmitBtn>\n      </StyledForm>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport * as heroBg from 'assets/images/main/hero-min.jpg';\nimport * as bigHeroBg from 'assets/images/main/hero@2x-min.jpg';\n\nconst setBgImage = theme => {\n  return `linear-gradient(\n      180deg,\n      ${theme.bgColors.overlayBg} 0%,\n     ${theme.bgColors.overlayBg} 61.48%\n    ),\n    url(${heroBg.default})`;\n};\n\nconst setBigBgImage = theme => {\n  return `linear-gradient(\n      180deg,\n      ${theme.bgColors.overlayBg} 0%,\n     ${theme.bgColors.overlayBg} 61.48%\n    ),\n    url(${bigHeroBg.default})`;\n};\n\nexport const HeroHeaderBg = styled.div`\n  position: absolute;\n  top: -20%;\n  left: -10%;\n  z-index: -1;\n  width: 120%;\n  height: 400px;\n\n  background-color: #f18585;\n  background-image: ${prop => setBgImage(prop.theme)};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  border-bottom-right-radius: 50%;\n  border-bottom-left-radius: 50%;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${prop => setBigBgImage(prop.theme)};\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 550px;\n  }\n`;\n\nexport const HeroSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: center;\n\n  height: 120px;\n  padding: 0 40px;\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    height: 140px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 180px;\n  }\n`;\n\nexport const HeroSubtitle = styled.p`\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const HeroTitle = styled.h1`\n  font-family: 'MontserratBold';\n  font-size: 22px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 38px;\n  }\n`;\n\nexport const FormSection = styled.section``;\n\nexport const FormSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { StreamerForm } from 'components/Forms/StreamerForm/StreamerForm';\nimport {\n  HeroHeaderBg,\n  HeroSection,\n  HeroSubtitle,\n  HeroTitle,\n  FormSection,\n  FormSectionTitle,\n} from './StreamersPage.styled';\n\nconst StreamersPage = () => {\n  return (\n    <>\n      <HeroHeaderBg />\n      <HeroSection>\n        <HeroSubtitle>Welcome to the Dare Drop Streaming Service</HeroSubtitle>\n        <HeroTitle>Find the best streamer to your liking!</HeroTitle>\n      </HeroSection>\n      <FormSection>\n        <FormSectionTitle>Join the platform</FormSectionTitle>\n        <StreamerForm />\n      </FormSection>\n    </>\n  );\n};\n\nexport default StreamersPage;\n"],"names":["genreOptions","value","label","platformOptionsData","platform","imgURL","concat","youtubeImg","description","tiktokImg","twitchImg","kickImg","rumbleImg","allowedGenres","map","genre","allowedPlatforms","platformObj","toLowerCase","StreamerRegisterSchema","object","shape","name","string","max","required","oneOf","LightThemeSelectStyles","control","base","_ref","data","isDisabled","isFocused","isSelected","_objectSpread","marginTop","background","color","outline","option","styles","_ref2","backgroundColor","singleValue","state","DarkThemeSelectStyles","_ref3","_ref4","SelectInput","options","setUserChoice","defaultValue","useEffect","prevState","_defineProperty","currentTheme","useSelector","selectCurrentTheme","_jsx","_Fragment","children","Select","selectCustomStyles","onChange","choice","validateColor","error","submited","theme","commonColors","inputErrorText","inputCorrectText","StyledInput","styled","_templateObject","_taggedTemplateLiteral","bgColors","mainBg","textColors","mainText","StyledValidation","_templateObject2","_ref5","GeneralInput","type","placeholder","formik","_jsxs","handleChange","values","errors","touched","Container","StyledLogo","StyledLabel","_templateObject3","StyledText","_templateObject4","OptionLabel","platformName","src","alt","platformOptions","FormBg","bgImages","streamerFormBg","StyledForm","StyledFormTitle","_templateObject5","SubmitBtn","_templateObject6","accentElemBg","contrastText","StreamerForm","_useState","useState","_useState2","_slicedToArray","userChoice","_useState3","_useState4","isSubmited","setIsSubmited","useFormik","initialValues","validationSchema","onSubmit","resetForm","console","log","onClick","e","preventDefault","handleSubmit","HeroHeaderBg","prop","overlayBg","heroBg","bigHeroBg","HeroSection","HeroSubtitle","HeroTitle","FormSection","FormSectionTitle"],"sourceRoot":""}