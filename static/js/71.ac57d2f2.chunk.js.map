{"version":3,"file":"static/js/71.ac57d2f2.chunk.js","mappings":"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","sources":["assets/data/SelectPlatformOptionData.js","components/Decoration/HeroBg/HeroBg.styled.jsx","components/Decoration/HeroBg/HeroBg.jsx","components/NavLinkBtn/NavLinkBtn.styled.jsx","components/NavLinkBtn/NavLinkBtn.jsx","helpers/backendAPI.js","assets/data/SelectGenresOptionData.js","helpers/FormValidationSchemas.js","components/Forms/SelectInput/SelectInput.styled.jsx","components/Forms/SelectInput/SelectInput.jsx","components/Forms/GeneralInput/GeneralInput.styled.jsx","components/Forms/GeneralInput/GeneralInput.jsx","components/Forms/TextareaInput/TextareaInput.styled.jsx","components/Forms/TextareaInput/TextareaInput.jsx","components/Forms/FileInput/FileInput.styled.jsx","components/Forms/FileInput/FileInput.jsx","components/Forms/PlatformOptions/PlatformOptions.styled.jsx","components/Forms/PlatformOptions/PlatformOptions.jsx","components/Forms/StreamerForm/StreamerForm.styled.jsx","components/Forms/StreamerForm/StreamerForm.jsx","components/StreamersList/StreamersCard/StreamersCard.Styled.jsx","components/StreamersList/StreamersCard/StreamersCard.jsx","components/StreamersList/StreamersList.styled.jsx","components/StreamersList/StreamersList.jsx","pages/StreamersPage/StreamersPage.styled.jsx","pages/StreamersPage/StreamersPage.jsx"],"sourcesContent":["import * as youtubeImg from 'assets/images/platforms/youtube-min.png';\nimport * as tiktokImg from 'assets/images/platforms/tiktok-min.png';\nimport * as twitchImg from 'assets/images/platforms/twitch-min.png';\nimport * as kickImg from 'assets/images/platforms/kick-min.png';\nimport * as rumbleImg from 'assets/images/platforms/rumble-min.png';\n\nexport const platformOptionsData = [\n  {\n    platform: 'YouTube',\n    imgURL: `${youtubeImg.default}`,\n    description:\n      'A popular video hosting service that offers streaming, access to original programming, and offline video playback on mobile devices.',\n  },\n  {\n    platform: 'TikTok',\n    imgURL: `${tiktokImg.default}`,\n    description:\n      'A popular social media app known for its short, creative videos and viral trends.',\n  },\n  {\n    platform: 'Twitch',\n    imgURL: `${twitchImg.default}`,\n    description:\n      'A live-streaming platform primarily focused on gaming, providing a space for gamers and viewers to interact and build communities.',\n  },\n  {\n    platform: 'Kick',\n    imgURL: `${kickImg.default}`,\n    description:\n      'A new and ambitious streaming platform that allows users to create and watch live broadcasts in real time.',\n  },\n  {\n    platform: 'Rumble',\n    imgURL: `${rumbleImg.default}`,\n    description:\n      'A platform where users can share and discover user-generated videos.',\n  },\n];\n","import styled from 'styled-components';\n\nconst setBgImage = (theme, img) => {\n  return `linear-gradient(\n      180deg,\n      ${theme.bgColors.overlayBg} 0%,\n     ${theme.bgColors.overlayBg} 61.48%\n    ),\n    url(${img})`;\n};\n\nconst setBigBgImage = (theme, img) => {\n  return `linear-gradient(\n      180deg,\n      ${theme.bgColors.overlayBg} 0%,\n     ${theme.bgColors.overlayBg} 61.48%\n    ),\n    url(${img})`;\n};\n\nexport const HeroHeaderBg = styled.div`\n  position: absolute;\n  top: -100px;\n  left: -10%;\n  z-index: -1;\n  width: 120%;\n  height: 600px;\n\n  background-color: #f18585;\n  background-image: ${prop => setBgImage(prop.theme, prop.image)};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top center;\n\n  border-bottom-right-radius: 50%;\n  border-bottom-left-radius: 50%;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${prop => setBigBgImage(prop.theme, prop.bigimage)};\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 700px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HeroHeaderBg } from './HeroBg.styled';\n\nexport const HeroBg = ({ image, bigimage }) => {\n  return <HeroHeaderBg image={image} bigimage={bigimage} />;\n};\n\nHeroBg.propTypes = {\n  image: PropTypes.string,\n  bigimage: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0 auto;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 1em;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './NavLinkBtn.styled';\n\nexport const NavLinkBtn = ({ direction, text }) => {\n  return <StyledLink to={direction}>{text}</StyledLink>;\n};\n\nNavLinkBtn.propTypes = {\n  direction: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URI = 'https://daredrop-streaming-backend.onrender.com';\n\nexport const fetchAPI = async (method, address, data) => {\n  try {\n    let response;\n\n    if (method === 'get') {\n      response = await axios.get(`${BASE_URI}${address}`);\n    } else if (method === 'post') {\n      response = await axios.post(`${BASE_URI}${address}`, data);\n    } else if (method === 'put') {\n      response = await axios.put(`${BASE_URI}${address}`, data);\n    }\n\n    return response.data;\n  } catch (e) {\n    if (axios.isCancel(e)) {\n      return;\n    }\n    console.error(e);\n  }\n};\n","export const genreOptions = [\n  {\n    value: 'alternative',\n    label: 'Alternative',\n  },\n  {\n    value: 'challenge',\n    label: 'Challenge',\n  },\n  {\n    value: 'comedy',\n    label: 'Comedy',\n  },\n  {\n    value: 'creative',\n    label: 'Creative',\n  },\n  {\n    value: 'educatuinal',\n    label: 'Educatuinal',\n  },\n  {\n    value: 'games',\n    label: 'Games',\n  },\n  {\n    value: 'interview',\n    label: 'Interview',\n  },\n  {\n    value: 'irl',\n    label: 'IRL',\n  },\n  {\n    value: 'movies',\n    label: 'Movies',\n  },\n  {\n    value: 'reactions',\n    label: 'Reactions',\n  },\n  {\n    value: 'tutorials',\n    label: 'Tutorials',\n  },\n  {\n    value: 'webcasts',\n    label: 'Webcasts',\n  },\n];\n","import { object, string, mixed } from 'yup';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nconst allowedGenres = genreOptions.map(genre => genre.value);\nconst allowedPlatforms = platformOptionsData.map(platformObj =>\n  platformObj.platform.toLowerCase()\n);\n\nexport const StreamerRegisterSchema = object().shape({\n  name: string().required('Streamer name is required'),\n  genre: string().oneOf(allowedGenres, 'Invalide option'),\n  platform: string().oneOf(allowedPlatforms, 'Invalide option'),\n  description: string()\n    .max(1000, 'Description should not exceed 1000 characters')\n    .required('Description is required'),\n  photo: mixed(),\n});\n","export const LightThemeSelectStyles = {\n  control: (base, { data, isDisabled, isFocused, isSelected }) => ({\n    ...base,\n    marginTop: 8,\n    background: `#FFFFFF`,\n    color: `#000000`,\n    outline: isFocused ? `1px solid #E91E63` : `1px solid #000000`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#FFFFFF`,\n    color: isFocused ? `#FFFFFF` : `#000000`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#000000`,\n  }),\n};\n\nexport const DarkThemeSelectStyles = {\n  control: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    marginTop: 8,\n    background: `#303030`,\n    color: `#FFFFFF`,\n    outline: `1px solid #FFFFFF`,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    backgroundColor: isFocused ? `#E91E63` : `#303030`,\n    color: `#FFFFFF`,\n  }),\n  singleValue: (styles, state) => ({\n    ...styles,\n    color: `#FFFFFF`,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentTheme } from 'redux/selectors';\n\nimport Select from 'react-select';\n\nimport {\n  LightThemeSelectStyles,\n  DarkThemeSelectStyles,\n} from './SelectInput.styled';\n\nexport const SelectInput = ({ name, options, setUserChoice, defaultValue }) => {\n  useEffect(() => {\n    if (defaultValue) {\n      setUserChoice(prevState => ({\n        ...prevState,\n        [`${name}`]: defaultValue.value,\n      }));\n    }\n  }, [name, defaultValue, setUserChoice]);\n\n  const currentTheme = useSelector(selectCurrentTheme);\n\n  const selectCustomStyles = currentTheme =>\n    currentTheme ? LightThemeSelectStyles : DarkThemeSelectStyles;\n\n  return (\n    <>\n      <Select\n        name={name}\n        options={options}\n        styles={selectCustomStyles(currentTheme)}\n        onChange={choice =>\n          setUserChoice(prevState => ({\n            ...prevState,\n            [`${name}`]: choice.value,\n          }))\n        }\n        defaultValue={defaultValue}\n      />\n    </>\n  );\n};\n\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setUserChoice: PropTypes.func.isRequired,\n  defaultValue: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledInput,\n  ValidationThumb,\n  StyledValidation,\n} from './GeneralInput.styled';\n\nexport const GeneralInput = ({ type, name, placeholder, formik, submited }) => {\n  return (\n    <ValidationThumb>\n      <StyledInput\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={formik.handleChange}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nGeneralInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledTextarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin: 8px 0 0;\n  padding: 5px 10px;\n  resize: none;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n\n  background: ${({ theme }) => theme.bgColors.mainBg};\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  outline-color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  ::placeholder {\n    color: rgba(220, 227, 229, 0.6);\n  }\n\n  &::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: ${({ theme }) => theme.commonColors.linksBg};\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.commonColors.linksBg};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 275px;\n    font-size: 18px;\n  }\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledTextarea,\n  ValidationThumb,\n  StyledValidation,\n} from './TextareaInput.styled';\n\nexport const TextareaInput = ({\n  name,\n  rows,\n  placeholder,\n  formik,\n  submited,\n}) => {\n  return (\n    <ValidationThumb>\n      <StyledTextarea\n        name={name}\n        rows={rows}\n        placeholder={placeholder}\n        value={formik.values[`${name}`]}\n        submited={submited}\n        onChange={formik.handleChange}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nTextareaInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  rows: PropTypes.number.isRequired,\n  placeholder: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst validateColor = (error, submited, theme, color) => {\n  if (submited === 'false') {\n    return color;\n  } else {\n    return error\n      ? theme.commonColors.inputErrorText\n      : theme.commonColors.inputCorrectText;\n  }\n};\n\nexport const StyledLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  height: 110px;\n  margin-top: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  outline: 1px solid ${({ theme }) => theme.textColors.mainText};\n  background-color: ${({ theme }) => theme.bgColors.fileInputBg};\n  cursor: pointer;\n\n  font-family: 'MontserratMedium';\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-size: 14px;\n  line-height: 1.22;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.bgColors.fileInputHoverBg};\n  }\n\n  ::file-selector-button {\n    background-color: transparent;\n    border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n    border-radius: 37.5px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n      color: ${({ theme }) => theme.commonColors.contrastText};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    border-radius: 8px;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ValidationThumb = styled.div`\n  position: relative;\n`;\n\nexport const StyledValidation = styled.p`\n  position: absolute;\n  bottom: -20px;\n\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, submited, theme }) =>\n    validateColor(error, submited, theme, `${theme.textColors.mainText}`)};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledLabel,\n  StyledInput,\n  ValidationThumb,\n  StyledValidation,\n} from './FileInput.styled';\n\nexport const FileInput = ({ name, formik, submited, isFile, setIsFile }) => {\n  const handleFile = e => {\n    setIsFile(e.target.files[0]);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsFile(e.dataTransfer.files[0]);\n  };\n\n  const handleDefault = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <ValidationThumb>\n      <StyledLabel\n        onDragStart={e => handleDefault(e)}\n        onDragLeave={e => handleDefault(e)}\n        onDragOver={e => handleDefault(e)}\n        onDrop={e => handleDrop(e)}\n      >\n        {isFile\n          ? `Photo ${isFile.name} is chosen`\n          : 'Click here to add streamer photo'}\n\n        <StyledInput\n          type=\"file\"\n          name={name}\n          value={formik.values[`${name}`]}\n          submited={submited}\n          error={formik.errors[`${name}`]}\n          onChange={handleFile}\n        />\n      </StyledLabel>\n      {formik.touched[`${name}`] && (\n        <StyledValidation submited={submited} error={formik.errors[`${name}`]}>\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a correct ${name}`}\n        </StyledValidation>\n      )}\n    </ValidationThumb>\n  );\n};\n\nFileInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  submited: PropTypes.string.isRequired,\n  isFile: PropTypes.object,\n  setIsFile: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  column-gap: 5px;\n  row-gap: 5px;\n  grid-template-columns: 1fr 9fr;\n  grid-template-rows: 1fr 3fr;\n\n  width: 100%;\n  height: 100px;\n  padding: 5px 0;\n\n  @media screen and (min-width: 768px) {\n    height: 120px;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 22px;\n  height: 22px;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n  justify-self: end;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 42px;\n    height: 42px;\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 2 / 3;\n  align-self: center;\n  justify-self: start;\n\n  font-family: 'MontserratBold';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  grid-row: 2 / 3;\n  grid-column: 1 / 3;\n\n  font-family: 'MontserratRegular';\n  font-size: 14px;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\n\nimport {\n  Container,\n  StyledLabel,\n  StyledLogo,\n  StyledText,\n} from './PlatformOptions.styled';\n\nconst OptionLabel = ({ platformName, imgURL, description }) => {\n  return (\n    <Container>\n      <StyledLogo src={imgURL} alt={`${platformName} logo`} />\n      <StyledLabel>{platformName}</StyledLabel>\n      <StyledText>{description}</StyledText>\n    </Container>\n  );\n};\n\nexport const platformOptions = platformOptionsData.map(\n  ({ platform, imgURL, description }) => {\n    return {\n      value: platform.toLowerCase(),\n      label: (\n        <OptionLabel\n          platformName={platform}\n          imgURL={imgURL}\n          description={description}\n        />\n      ),\n    };\n  }\n);\n\nOptionLabel.propTypes = {\n  platformName: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  border-radius: 8px;\n  background-color: #f18585;\n\n  font-family: 'MontserratRegular';\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    width: 550px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 900px;\n  }\n`;\n\nexport const FormBg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  background-image: ${({ theme }) => theme.bgImages.streamerFormBg};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  filter: blur(4px);\n  -webkit-filter: blur(4px);\n`;\n\nexport const StyledForm = styled.form`\n  position: relative;\n  z-index: 10;\n`;\n\nexport const StyledFormTitle = styled.h3`\n  margin-bottom: 10px;\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StyledFormLayoutThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr;\n    column-gap: 40px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  width: 100%;\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n\n  display: inline-block;\n  padding: 8px 20px;\n  margin: 20px auto 0;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.accentElemBg};\n  border-radius: 37.5px;\n\n  font-family: 'MontserratMedium', sans-serif;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.accentElemBg};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 20px;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    left: 90%;\n    font-size: 22px;\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { StreamerRegisterSchema } from 'helpers/FormValidationSchemas';\n\nimport { SelectInput } from '../SelectInput/SelectInput';\nimport { GeneralInput } from '../GeneralInput/GeneralInput';\nimport { TextareaInput } from '../TextareaInput/TextareaInput';\nimport { FileInput } from '../FileInput/FileInput';\n\nimport { platformOptions } from '../PlatformOptions/PlatformOptions';\nimport { genreOptions } from 'assets/data/SelectGenresOptionData';\n\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport {\n  Container,\n  FormBg,\n  StyledForm,\n  StyledFormTitle,\n  StyledFormLayoutThumb,\n  SubmitBtn,\n  StyledLabel,\n} from './StreamerForm.styled';\n\nexport const StreamerForm = () => {\n  const [userChoice, setUserChoice] = useState({});\n  const [isFile, setIsFile] = useState(null);\n  const [isSubmited, setIsSubmited] = useState('false');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      genre: '',\n      platform: '',\n      description: '',\n      photo: '',\n    },\n    validationSchema: StreamerRegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      const formData = new FormData();\n      formData.append('name', values.name);\n      formData.append('genre', userChoice.genre);\n      formData.append('platform', userChoice.platform);\n      formData.append('description', values.description);\n      formData.append('photo', isFile);\n\n      fetchAPI('post', '/api/streamers', formData);\n      resetForm();\n      setIsFile(null);\n      setIsSubmited('false');\n    },\n  });\n\n  const handleValidation = e => {\n    e.preventDefault();\n    setIsSubmited('true');\n    formik.handleSubmit();\n  };\n\n  return (\n    <Container>\n      <FormBg />\n      <StyledForm>\n        <StyledFormTitle>Join the community!</StyledFormTitle>\n        <StyledFormLayoutThumb>\n          <div>\n            <StyledLabel>\n              Streamer name\n              <GeneralInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <StyledLabel>\n              Choose your platform\n              <SelectInput\n                name=\"platform\"\n                options={platformOptions}\n                setUserChoice={setUserChoice}\n                defaultValue={platformOptions[0]}\n                value={formik.values['platform']}\n                error={formik.errors['platform']}\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <FileInput\n              name=\"photo\"\n              submited={isSubmited}\n              formik={formik}\n              isFile={isFile}\n              setIsFile={setIsFile}\n            />\n          </div>\n          <div>\n            <StyledLabel>\n              Streaming genre\n              <SelectInput\n                name=\"genre\"\n                options={genreOptions}\n                setUserChoice={setUserChoice}\n                defaultValue={genreOptions[0]}\n                value={formik.values['genre']}\n                error={formik.errors['genre']}\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n            <StyledLabel>\n              Add streamer activity description\n              <TextareaInput\n                name=\"description\"\n                rows={5}\n                placeholder=\"Enter streamer activity description\"\n                submited={isSubmited}\n                formik={formik}\n              />\n            </StyledLabel>\n          </div>\n        </StyledFormLayoutThumb>\n        <SubmitBtn type=\"submit\" onClick={handleValidation}>\n          Submit\n        </SubmitBtn>\n      </StyledForm>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n\n  width: 100%;\n  height: 280px;\n  padding: 10px;\n  border-radius: 8px;\n\n  font-size: 14px;\n\n  background-image: linear-gradient(\n    315deg,\n    rgba(233, 30, 99, 0.5) 0%,\n    rgba(48, 79, 254, 0.5) 100%\n  );\n\n  @media screen and (min-width: 480px) {\n    width: 450px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    font-size: 16px;\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 115px;\n  height: 45%;\n\n  border-radius: 8px;\n  border-top-right-radius: 40%;\n  border-bottom-right-radius: 50%;\n  border-bottom-left-radius: 45%;\n\n  border-right-width: 10px;\n  border-right-style: solid;\n  border-right-color: ${({ theme }) => theme.textColors.accentText};\n\n  border-bottom-width: 10px;\n  border-bottom-style: solid;\n  border-bottom-color: ${({ theme }) => theme.textColors.accentText};\n\n  overflow: hidden;\n\n  @media screen and (min-width: 480px) {\n    width: 150px;\n    height: 55%;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 130px;\n    height: 50%;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const InfoThumb = styled.div`\n  display: grid;\n  grid-template-rows: repeat(8, 1fr);\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n  align-items: center;\n\n  width: 100%;\n  height: 85%;\n\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const CardTitle = styled.h4`\n  grid-row: 1 / 3;\n  grid-column: 2 / 4;\n\n  color: ${({ theme }) => theme.textColors.accentText};\n  font-family: 'MontserratBold';\n  font-size: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nexport const StyledPlatform = styled.p`\n  grid-row: 3 / 4;\n  grid-column: 2 / 4;\n\n  font-family: 'MontserratMedium';\n`;\n\nexport const StyledGenre = styled.p`\n  grid-row: 4 / 5;\n  grid-column: 2 / 4;\n\n  font-family: 'MontserratMedium';\n`;\n\nexport const StyledRating = styled.p`\n  grid-row: 5 / 6;\n  grid-column: 2 / 4;\n`;\n\nexport const VoteThumb = styled.div`\n  display: grid;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 5px;\n  justify-items: center;\n\n  grid-row: 6 / 9;\n  grid-column: 1 / 4;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 10px;\n  }\n`;\n\nexport const UpvotesText = styled.p`\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  align-self: end;\n\n  color: ${({ theme }) => theme.commonColors.inputCorrectText};\n  font-size: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  > svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\nexport const DownvotesText = styled(UpvotesText)`\n  grid-column: 2 / 3;\n  color: ${({ theme }) => theme.commonColors.inputErrorText};\n\n  > svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const UpvoteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: end;\n\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n\n  min-width: 100px;\n  padding: 5px 20px;\n\n  background-color: transparent;\n  border: 3px solid ${({ theme }) => theme.commonColors.inputCorrectText};\n  border-radius: 37.5px;\n  color: ${({ theme }) => theme.textColors.mainText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.inputCorrectText};\n    color: ${({ theme }) => theme.commonColors.contrastText};\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 150px;\n  }\n\n  > svg {\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n\n    @media screen and (min-width: 768px) {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const DownvoteBtn = styled(UpvoteBtn)`\n  grid-column: 2 / 3;\n  border: 3px solid ${({ theme }) => theme.commonColors.inputErrorText};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.commonColors.inputErrorText};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im';\nimport { FaRegThumbsUp, FaRegThumbsDown } from 'react-icons/fa';\n\nimport { NavLinkBtn } from 'components/NavLinkBtn/NavLinkBtn';\n\nimport {\n  Container,\n  ImageThumb,\n  StyledImg,\n  InfoThumb,\n  CardTitle,\n  StyledPlatform,\n  StyledGenre,\n  StyledRating,\n  UpvotesText,\n  DownvotesText,\n  VoteThumb,\n  UpvoteBtn,\n  DownvoteBtn,\n} from './StreamersCard.Styled';\n\nexport const StreamersCard = ({\n  streamer: { _id, name, photoURL, genre, platform, upvote, downvote, rating },\n}) => {\n  const handleUpvote = () => {\n    fetchAPI('put', `/api/streamers/${_id}/vote`, { upvote: upvote + 1 });\n  };\n\n  const handleDownvote = () => {\n    fetchAPI('put', `/api/streamers/${_id}/vote`, { downvote: downvote + 1 });\n  };\n\n  return (\n    <Container>\n      <ImageThumb>\n        <StyledImg src={photoURL} alt={name} width=\"150px\" height=\"250px\" />\n      </ImageThumb>\n      <InfoThumb>\n        <CardTitle>{name}</CardTitle>\n        <StyledPlatform>\n          Patform: <span>{platform}</span>\n        </StyledPlatform>\n        <StyledGenre>\n          Genre: <span>{genre}</span>\n        </StyledGenre>\n        <StyledRating>\n          Rating: <span>{rating ? rating : 0}</span>\n        </StyledRating>\n        <VoteThumb>\n          <UpvotesText>\n            <ImArrowUp /> {upvote}\n          </UpvotesText>\n          <DownvotesText>\n            <ImArrowDown />\n            {downvote}\n          </DownvotesText>\n          <UpvoteBtn onClick={handleUpvote}>\n            <FaRegThumbsUp /> Upvote\n          </UpvoteBtn>\n          <DownvoteBtn onClick={handleDownvote}>\n            <FaRegThumbsDown /> Downvote\n          </DownvoteBtn>\n        </VoteThumb>\n      </InfoThumb>\n      <NavLinkBtn direction={`/streamers/${_id}`} text=\"View Details\" />\n    </Container>\n  );\n};\n\nStreamersCard.propTypes = {\n  streamer: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    photoURL: PropTypes.string,\n    genre: PropTypes.string.isRequired,\n    platform: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    upvote: PropTypes.number.isRequired,\n    downvote: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n\n  margin: 20px 0;\n\n  @media screen and (min-width: 768px) {\n    gap: 30px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StreamersCard } from './StreamersCard/StreamersCard';\nimport { StyledList } from './StreamersList.styled';\n\nexport const StreamersList = ({ streamers }) => {\n  return (\n    <StyledList>\n      {streamers.map(streamer => {\n        return <StreamersCard key={streamer._id} streamer={streamer} />;\n      })}\n    </StyledList>\n  );\n};\n\nStreamersList.propTypes = {\n  streamers: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from 'styled-components';\nimport * as streamersBg from 'assets/images/main/streamers_bg-min.png';\nimport * as streamersBigBg from 'assets/images/main/streamers_bg@2x-min.png';\n\nexport const HeroSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: center;\n\n  height: 120px;\n  padding: 0 40px;\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    height: 140px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 180px;\n  }\n`;\n\nexport const HeroSubtitle = styled.p`\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const HeroTitle = styled.h1`\n  font-family: 'MontserratBold';\n  font-size: 22px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 42px;\n  }\n`;\n\nexport const FormSection = styled.section`\n  padding: 40px;\n`;\n\nexport const FormSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const StreamersSection = styled.section`\n  width: 100%;\n  min-height: 800px;\n  padding: 20px 40px;\n\n  background-image: url(${streamersBg.default});\n  background-repeat: no-repeat;\n  background-size: 150% 700px;\n  background-position: top 100px left 0;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${streamersBigBg.default});\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 40px;\n  }\n`;\n\nexport const StreamersSectionTitle = styled.h2`\n  font-family: 'MontserratBold';\n  font-size: 34px;\n`;\n\nexport const TitleAccent = styled.span`\n  display: block;\n  color: ${({ theme }) => theme.textColors.accentText};\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { HeroBg } from 'components/Decoration/HeroBg/HeroBg';\nimport * as heroBg from 'assets/images/main/hero-min.jpg';\nimport * as bigHeroBg from 'assets/images/main/hero@2x-min.jpg';\n\nimport { StreamerForm } from 'components/Forms/StreamerForm/StreamerForm';\nimport { StreamersList } from 'components/StreamersList/StreamersList';\nimport {\n  HeroSection,\n  HeroSubtitle,\n  HeroTitle,\n  FormSection,\n  FormSectionTitle,\n  StreamersSection,\n  StreamersSectionTitle,\n  TitleAccent,\n} from './StreamersPage.styled';\n\nconst StreamersPage = () => {\n  const [streamers, setStreamers] = useState([]);\n\n  useEffect(() => {\n    const getStreamers = async () => {\n      try {\n        const response = await fetchAPI('get', '/api/streamers');\n        setStreamers(response);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const timerId = setInterval(() => {\n      getStreamers();\n    }, 2000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  return (\n    <>\n      <HeroBg image={heroBg.default} bigimage={bigHeroBg.default} />\n      <HeroSection>\n        <HeroSubtitle>Welcome to the Dare Drop Streaming Service</HeroSubtitle>\n        <HeroTitle>Find the best streamer to your liking!</HeroTitle>\n      </HeroSection>\n      <FormSection>\n        <FormSectionTitle>Join the platform</FormSectionTitle>\n        <StreamerForm />\n      </FormSection>\n      <StreamersSection>\n        <StreamersSectionTitle>\n          Dare Drop <TitleAccent>Top Streamers</TitleAccent>\n          <StreamersList streamers={streamers} />\n        </StreamersSectionTitle>\n      </StreamersSection>\n    </>\n  );\n};\n\nexport default StreamersPage;\n"],"names":["platformOptionsData","platform","imgURL","concat","youtubeImg","description","tiktokImg","twitchImg","kickImg","rumbleImg","HeroHeaderBg","styled","_templateObject","_taggedTemplateLiteral","prop","theme","img","image","bgColors","overlayBg","bigimage","HeroBg","_ref","_jsx","StyledLink","NavLink","commonColors","accentElemBg","_ref2","textColors","mainText","_ref3","_ref4","contrastText","NavLinkBtn","direction","text","to","children","BASE_URI","fetchAPI","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","address","data","response","wrap","_context","prev","next","axios","sent","abrupt","t0","console","error","stop","_x","_x2","_x3","apply","arguments","genreOptions","value","label","allowedGenres","map","genre","allowedPlatforms","platformObj","toLowerCase","StreamerRegisterSchema","object","shape","name","string","required","oneOf","max","photo","mixed","LightThemeSelectStyles","control","base","isDisabled","isFocused","isSelected","_objectSpread","marginTop","background","color","outline","option","styles","backgroundColor","singleValue","state","DarkThemeSelectStyles","SelectInput","options","setUserChoice","defaultValue","useEffect","prevState","_defineProperty","currentTheme","useSelector","selectCurrentTheme","_Fragment","Select","selectCustomStyles","onChange","choice","validateColor","submited","inputErrorText","inputCorrectText","StyledInput","mainBg","ValidationThumb","_templateObject2","StyledValidation","_templateObject3","_ref5","GeneralInput","type","placeholder","formik","_jsxs","handleChange","values","errors","touched","StyledTextarea","linksBg","_ref6","_ref7","_ref8","TextareaInput","rows","StyledLabel","fileInputBg","fileInputHoverBg","_templateObject4","FileInput","isFile","setIsFile","handleDefault","e","preventDefault","onDragStart","onDragLeave","onDragOver","onDrop","dataTransfer","files","handleDrop","target","Container","StyledLogo","StyledText","OptionLabel","platformName","src","alt","platformOptions","FormBg","bgImages","streamerFormBg","StyledForm","StyledFormTitle","StyledFormLayoutThumb","_templateObject5","_templateObject6","SubmitBtn","_templateObject7","StreamerForm","_useState","useState","_useState2","_slicedToArray","userChoice","_useState3","_useState4","_useState5","_useState6","isSubmited","setIsSubmited","useFormik","initialValues","validationSchema","onSubmit","resetForm","formData","FormData","append","onClick","handleSubmit","ImageThumb","accentText","StyledImg","InfoThumb","CardTitle","StyledPlatform","StyledGenre","StyledRating","_templateObject8","VoteThumb","_templateObject9","UpvotesText","_templateObject10","DownvotesText","_templateObject11","UpvoteBtn","_templateObject12","_ref9","DownvoteBtn","_templateObject13","_ref10","_ref11","StreamersCard","_ref$streamer","streamer","_id","photoURL","upvote","downvote","rating","width","height","ImArrowUp","ImArrowDown","FaRegThumbsUp","FaRegThumbsDown","StyledList","StreamersList","streamers","HeroSection","HeroSubtitle","HeroTitle","FormSection","FormSectionTitle","StreamersSection","streamersBg","streamersBigBg","StreamersSectionTitle","TitleAccent","setStreamers","getStreamers","timerId","setInterval","clearInterval","heroBg","bigHeroBg"],"sourceRoot":""}