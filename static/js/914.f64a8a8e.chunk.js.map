{"version":3,"file":"static/js/914.f64a8a8e.chunk.js","mappings":"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","sources":["assets/data/SelectPlatformOptionData.js","components/Decoration/HeroBg/HeroBg.styled.jsx","components/Decoration/HeroBg/HeroBg.jsx","helpers/backendAPI.js","components/Badges/GenreBadge/GenreBadge.styled.jsx","components/Badges/GenreBadge/GenreBadge.jsx","components/Badges/PlatformBadge/PlatformBadge.styled.jsx","components/Badges/PlatformBadge/PlatformBadge.jsx","components/StreamerRecord/StreamerRecord.styled.jsx","components/StreamerRecord/StreamerRecord.jsx","pages/StreamerRecordPage/StreamerRecordPage.styled.jsx","pages/StreamerRecordPage/StreamerRecordPage.jsx"],"sourcesContent":["import * as youtubeImg from 'assets/images/platforms/youtube-min.png';\nimport * as tiktokImg from 'assets/images/platforms/tiktok-min.png';\nimport * as twitchImg from 'assets/images/platforms/twitch-min.png';\nimport * as kickImg from 'assets/images/platforms/kick-min.png';\nimport * as rumbleImg from 'assets/images/platforms/rumble-min.png';\n\nexport const platformOptionsData = [\n  {\n    platform: 'YouTube',\n    imgURL: `${youtubeImg.default}`,\n    description:\n      'A popular video hosting service that offers streaming, access to original programming, and offline video playback on mobile devices.',\n  },\n  {\n    platform: 'TikTok',\n    imgURL: `${tiktokImg.default}`,\n    description:\n      'A popular social media app known for its short, creative videos and viral trends.',\n  },\n  {\n    platform: 'Twitch',\n    imgURL: `${twitchImg.default}`,\n    description:\n      'A live-streaming platform primarily focused on gaming, providing a space for gamers and viewers to interact and build communities.',\n  },\n  {\n    platform: 'Kick',\n    imgURL: `${kickImg.default}`,\n    description:\n      'A new and ambitious streaming platform that allows users to create and watch live broadcasts in real time.',\n  },\n  {\n    platform: 'Rumble',\n    imgURL: `${rumbleImg.default}`,\n    description:\n      'A platform where users can share and discover user-generated videos.',\n  },\n];\n","import styled from 'styled-components';\n\nconst setBgImage = (theme, img) => {\n  return `linear-gradient(\n      180deg,\n      ${theme.bgColors.overlayBg} 0%,\n     ${theme.bgColors.overlayBg} 61.48%\n    ),\n    url(${img})`;\n};\n\nconst setBigBgImage = (theme, img) => {\n  return `linear-gradient(\n      180deg,\n      ${theme.bgColors.overlayBg} 0%,\n     ${theme.bgColors.overlayBg} 61.48%\n    ),\n    url(${img})`;\n};\n\nexport const HeroHeaderBg = styled.div`\n  position: absolute;\n  top: -100px;\n  left: -10%;\n  z-index: -1;\n  width: 120%;\n  height: 600px;\n\n  background-color: #f18585;\n  background-image: ${prop => setBgImage(prop.theme, prop.image)};\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top center;\n\n  border-bottom-right-radius: 50%;\n  border-bottom-left-radius: 50%;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${prop => setBigBgImage(prop.theme, prop.bigimage)};\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 700px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HeroHeaderBg } from './HeroBg.styled';\n\nexport const HeroBg = ({ image, bigimage }) => {\n  return <HeroHeaderBg image={image} bigimage={bigimage} />;\n};\n\nHeroBg.propTypes = {\n  image: PropTypes.string,\n  bigimage: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst BASE_URI = 'https://daredrop-streaming-backend.onrender.com';\n\nexport const fetchAPI = async (method, address, data) => {\n  try {\n    let response;\n\n    if (method === 'get') {\n      response = await axios.get(`${BASE_URI}${address}`);\n    } else if (method === 'post') {\n      response = await axios.post(`${BASE_URI}${address}`, data);\n    } else if (method === 'put') {\n      response = await axios.put(`${BASE_URI}${address}`, data);\n    }\n\n    return response.data;\n  } catch (e) {\n    if (axios.isCancel(e)) {\n      return;\n    }\n    console.error(e);\n  }\n};\n","import styled from 'styled-components';\n\nconst setColor = genre => {\n  switch (genre) {\n    case 'alternative':\n      return 'rgba(240, 246, 210, 0.8)';\n\n    case 'challenge':\n      return 'rgba(246, 210, 217, 0.8)';\n\n    case 'comedy':\n      return 'rgba(238, 210, 246, 0.8)';\n\n    case 'creative':\n      return 'rgba(210, 226, 246, 0.8)';\n\n    case 'educatuional':\n      return 'rgba(242, 246, 186, 0.8)';\n\n    case 'games':\n      return 'rgba(213, 195, 250, 0.8)';\n\n    case 'interview':\n      return 'rgba(195, 248, 250, 0.8)';\n\n    case 'irl':\n      return 'rgba(246, 210, 229, 0.8)';\n\n    case 'movies':\n      return 'rgba(250, 195, 196, 0.8)';\n\n    case 'reactions':\n      return 'rgba(250, 250, 122, 0.8)';\n\n    case 'tutorials':\n      return 'rgba(195, 250, 199, 0.8)';\n\n    case 'webcasts':\n      return 'rgba(246, 231, 210, 0.8)';\n\n    default:\n      return 'transparent';\n  }\n};\n\nexport const StyledGenreBadge = styled.p`\n  display: inline-block;\n  padding: 1% 8%;\n\n  background-color: ${({ genre }) => setColor(genre)};\n  border: 1px solid ${({ genre }) => setColor(genre)};\n  border-radius: 37.5px;\n\n  color: ${({ theme }) => theme.commonColors.contrastDarkText};\n`;\n","import PropTypes from 'prop-types';\nimport { StyledGenreBadge } from './GenreBadge.styled';\n\nexport const GenreBadge = ({ genre }) => {\n  return <StyledGenreBadge genre={genre}>{genre}</StyledGenreBadge>;\n};\n\nGenreBadge.propTypes = {\n  genre: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  height: ${({ height }) => `${height}px`};\n`;\n\nexport const StyledImg = styled.img`\n  width: auto;\n  height: 100%;\n`;\n\nexport const StyledLabel = styled.p`\n  font-size: inherit;\n`;\n","import PropTypes from 'prop-types';\nimport { platformOptionsData } from 'assets/data/SelectPlatformOptionData';\nimport { Container, StyledImg, StyledLabel } from './PlatformBadge.styled';\n\nexport const PlatformBadge = ({ platform, height }) => {\n  const currentPlatformData = platformOptionsData.find(\n    platformData => platformData.platform.toLowerCase() === platform\n  );\n\n  return (\n    <>\n      {currentPlatformData && (\n        <Container height={height}>\n          <StyledImg\n            src={currentPlatformData?.imgURL}\n            alt={currentPlatformData?.platform}\n          />\n          <StyledLabel>{currentPlatformData.platform}</StyledLabel>\n        </Container>\n      )}\n    </>\n  );\n};\n\nPlatformBadge.propTypes = {\n  platform: PropTypes.string.isRequired,\n  height: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding: 40px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 10px;\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  margin-bottom: 10px;\n\n  color: ${({ theme }) => theme.textColors.accentText};\n  font-family: 'MontserratBold';\n  font-size: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 42px;\n  }\n`;\n\nexport const GeneralThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  font-family: 'MontserratMedium';\n  font-size: 14px;\n  line-height: 1.32;\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    row-gap: 20px;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr 3fr;\n\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StreamerInfoThumb = styled.div`\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n\n  display: grid;\n  row-gap: 10px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 2fr;\n    gap: 20px;\n  }\n`;\n\nexport const RatingNumber = styled.p`\n  height: 20px;\n  padding-left: 15px;\n  align-self: center;\n\n  font-size: 16px;\n\n  border-left: 2px solid ${({ theme }) => theme.textColors.mainText};\n\n  @media screen and (min-width: 768px) {\n    height: 25px;\n    font-size: 22px;\n  }\n`;\n\nexport const GenreThumb = styled.div`\n  display: flex;\n  max-height: 25px;\n  margin: 0 20px 0 auto;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    gap: 10px;\n    align-items: start;\n    max-height: auto;\n    margin: 0;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    gap: 10px;\n    align-items: start;\n    margin: 0;\n  }\n`;\n\nexport const PlatformThumb = styled(GenreThumb)`\n  margin: 0 auto 0 20px;\n`;\n\nexport const ParameterLable = styled.span`\n  display: none;\n  margin-right: 10px;\n\n  color: ${({ theme }) => theme.textColors.mainText};\n  font-family: 'MontserratBold';\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    display: inline-block;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledDescription = styled.p`\n  text-align: justify;\n`;\n\nexport const ImageThumb = styled.div`\n  position: relative;\n  grid-row: 1 / 3;\n  grid-column: 2 / 3;\n  justify-self: center;\n  align-self: center;\n\n  width: 320px;\n  height: 380px;\n  background-color: ${({ theme }) => theme.textColors.accentText};\n\n  border-radius: 35%;\n  border-style: solid;\n  border-width: 10px 20px;\n  border-color: ${({ theme }) => theme.textColors.accentText};\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    height: 420px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 450px;\n    height: 550px;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { Rating, Star } from '@smastrom/react-rating';\nimport { GenreBadge } from 'components/Badges/GenreBadge/GenreBadge';\nimport { PlatformBadge } from '../Badges/PlatformBadge/PlatformBadge';\nimport {\n  StyledSection,\n  StyledSubtitle,\n  StyledTitle,\n  GeneralThumb,\n  StreamerInfoThumb,\n  RatingNumber,\n  GenreThumb,\n  PlatformThumb,\n  ParameterLable,\n  StyledDescription,\n  ImageThumb,\n  StyledImage,\n} from './StreamerRecord.styled';\n\nexport const StreamerRecord = ({\n  streamer: { _id, name, photoURL, genre, platform, description, rating },\n}) => {\n  const customStyles = {\n    itemShapes: Star,\n    activeFillColor: '#FFAC33',\n    inactiveFillColor: '#CEC9C1',\n  };\n\n  return (\n    <>\n      {_id && (\n        <StyledSection>\n          <StyledSubtitle>Dare Drop Streamer</StyledSubtitle>\n          <StyledTitle>{name}</StyledTitle>\n          <GeneralThumb>\n            <StreamerInfoThumb>\n              <Rating\n                style={{ maxWidth: 180, justifySelf: 'end', marginRight: 15 }}\n                value={rating}\n                itemStyles={customStyles}\n                readOnly\n              />\n              <RatingNumber>{rating}</RatingNumber>\n              <GenreThumb>\n                <ParameterLable>Genre:</ParameterLable>\n                <GenreBadge genre={genre} />\n              </GenreThumb>\n              <PlatformThumb>\n                <ParameterLable>Platform:</ParameterLable>\n                <PlatformBadge platform={platform} height={25} />\n              </PlatformThumb>\n            </StreamerInfoThumb>\n            <ImageThumb>\n              <StyledImage src={photoURL} alt={name} />\n            </ImageThumb>\n            <StyledDescription>\n              <ParameterLable>Activity description:</ParameterLable>\n              {description}\n            </StyledDescription>\n          </GeneralThumb>\n        </StyledSection>\n      )}\n    </>\n  );\n};\n\nStreamerRecord.propTypes = {\n  streamer: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n    photoURL: PropTypes.string,\n    genre: PropTypes.string,\n    platform: PropTypes.string,\n    description: PropTypes.string,\n    rating: PropTypes.number,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAPI } from 'helpers/backendAPI';\n\nimport { HeroBg } from 'components/Decoration/HeroBg/HeroBg';\nimport { StreamerRecord } from 'components/StreamerRecord/StreamerRecord';\nimport { PageTitle } from './StreamerRecordPage.styled';\n\nconst StreamerRecordPage = () => {\n  const [streamer, setStreamer] = useState({});\n  const { streamerId } = useParams();\n\n  useEffect(() => {\n    const getStreamerInfo = async () => {\n      const response = await fetchAPI('get', `/api/streamers/${streamerId}`);\n      setStreamer(response);\n    };\n\n    getStreamerInfo();\n  }, [streamerId]);\n\n  return (\n    <>\n      <HeroBg image={streamer.photoURL} bigimage={streamer.photoURL} />\n      <PageTitle>Find out about your favorite streamer</PageTitle>\n      <StreamerRecord streamer={streamer} />\n    </>\n  );\n};\n\nexport default StreamerRecordPage;\n"],"names":["platformOptionsData","platform","imgURL","concat","youtubeImg","description","tiktokImg","twitchImg","kickImg","rumbleImg","HeroHeaderBg","styled","_templateObject","_taggedTemplateLiteral","prop","theme","img","image","bgColors","overlayBg","bigimage","HeroBg","_ref","_jsx","BASE_URI","fetchAPI","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","address","data","response","wrap","_context","prev","next","axios","sent","abrupt","t0","console","error","stop","_x","_x2","_x3","apply","arguments","setColor","genre","StyledGenreBadge","_ref2","_ref3","commonColors","contrastDarkText","GenreBadge","children","Container","height","StyledImg","_templateObject2","StyledLabel","_templateObject3","PlatformBadge","currentPlatformData","platformData","toLowerCase","_Fragment","_jsxs","src","alt","StyledSection","StyledSubtitle","StyledTitle","textColors","accentText","GeneralThumb","_templateObject4","StreamerInfoThumb","_templateObject5","RatingNumber","_templateObject6","mainText","GenreThumb","_templateObject7","PlatformThumb","_templateObject8","ParameterLable","_templateObject9","StyledDescription","_templateObject10","ImageThumb","_templateObject11","_ref4","_ref5","StyledImage","_templateObject12","StreamerRecord","_ref$streamer","streamer","_id","name","photoURL","rating","customStyles","itemShapes","Star","activeFillColor","inactiveFillColor","Rating","style","maxWidth","justifySelf","marginRight","value","itemStyles","readOnly","PageTitle","_useState","useState","_useState2","_slicedToArray","setStreamer","streamerId","useParams","useEffect","getStreamerInfo"],"sourceRoot":""}